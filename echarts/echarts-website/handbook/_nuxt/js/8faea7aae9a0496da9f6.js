(window.webpackJsonp=window.webpackJsonp||[]).push([[48],{487:function(n,t,r){"use strict";r.r(t),t.default="# Dynamic Sorting Bar Chart\r\n\r\n## Related Options\r\n\r\nBar race is a chart that shows changes in the ranking of data over time and it is supported by default since ECharts 5.\r\n\r\n> Bar race charts usually use horizontal bars. If you want to use vertical bars, just take the X axis and Y axis in this tutorial to the opposite.\r\n\r\n1. Set `realtimeSort` of the bar series to be `true` to enable bar race\r\n2. Set `yAxis.inverse` to be `true` to display longer bars at top\r\n3. `yAxis.animationDuration` is suggested to be set to be `300` for bar reordering animation for the first time\r\n4. `yAxis.animationDurationUpdate` is suggested to be set to be `300` for bar reordering animation for later times\r\n5. Set `yAxis.max` to be _n - 1_ where _n_ is the number of bars to be displayed; otherwise, all bars are displayed\r\n6. `xAxis.max` is suggested to be set to be `'dataMax'` so that the maximum of data is used as X maximum.\r\n7. If realtime label changing is required, set `series.label.valueAnimation` to be `true`\r\n8. Set `animationDuration` to be `0` so that the first animation doesn't start from 0; if you wish otherwise, set it to be the same value as `animationDurationUpdate`\r\n9. `animationDurationUpdate` is suggested to be set to be `3000` for animation update duration, which should be the same as the frequency of calling `setOption`\r\n10. Call `setOption` to update data to be of next time with `setInterval` at the frequency of `animationDurationUpdate`\r\n\r\n## Demo\r\n\r\nA complete demo:\r\n\r\n```js live\r\nvar data = [];\r\nfor (let i = 0; i < 5; ++i) {\r\n  data.push(Math.round(Math.random() * 200));\r\n}\r\n\r\noption = {\r\n  xAxis: {\r\n    max: 'dataMax'\r\n  },\r\n  yAxis: {\r\n    type: 'category',\r\n    data: ['A', 'B', 'C', 'D', 'E'],\r\n    inverse: true,\r\n    animationDuration: 300,\r\n    animationDurationUpdate: 300,\r\n    max: 2 // only the largest 3 bars will be displayed\r\n  },\r\n  series: [\r\n    {\r\n      realtimeSort: true,\r\n      name: 'X',\r\n      type: 'bar',\r\n      data: data,\r\n      label: {\r\n        show: true,\r\n        position: 'right',\r\n        valueAnimation: true\r\n      }\r\n    }\r\n  ],\r\n  legend: {\r\n    show: true\r\n  },\r\n  animationDuration: 0,\r\n  animationDurationUpdate: 3000,\r\n  animationEasing: 'linear',\r\n  animationEasingUpdate: 'linear'\r\n};\r\n\r\nfunction run() {\r\n  var data = option.series[0].data;\r\n  for (var i = 0; i < data.length; ++i) {\r\n    if (Math.random() > 0.9) {\r\n      data[i] += Math.round(Math.random() * 2000);\r\n    } else {\r\n      data[i] += Math.round(Math.random() * 200);\r\n    }\r\n  }\r\n  myChart.setOption(option);\r\n}\r\n\r\nsetTimeout(function() {\r\n  run();\r\n}, 0);\r\nsetInterval(function() {\r\n  run();\r\n}, 3000);\r\n```\r\n"}}]);