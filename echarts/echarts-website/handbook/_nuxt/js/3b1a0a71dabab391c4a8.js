(window.webpackJsonp=window.webpackJsonp||[]).push([[96],{535:function(n,r,e){"use strict";e.r(r),r.default="# 坐标轴\r\n\r\n直角坐标系中的 x/y 轴。\r\n\r\n## x 轴、y 轴\r\n\r\nx 轴和 y 轴都由轴线、刻度、刻度标签、轴标题四个部分组成。部分图表中还会有网格线来帮助查看和计算数据\r\n\r\n<img max-width=\"830\" width=\"100%\" height=\"100%\" src=\"images/design/axis/charts_axis_img02.jpg\">\r\n</img>\r\n\r\n普通的二维数据坐标系都有 x 轴和 y 轴，通常情况下，x 轴显示在图表的底部，y 轴显示在左侧，一般配置如下：\r\n\r\n```js\r\noption = {\r\n  xAxis: {\r\n    // ...\r\n  },\r\n  yAxis: {\r\n    // ...\r\n  }\r\n};\r\n```\r\n\r\nx 轴常用来标示数据的维度，维度一般用来指数据的类别，是观察数据的角度，例如“销售时间” “销售地点” “产品名称”等。y 轴常常用来标示数据的数值，数值是用来具体考察某一类数据的数量值，也是我们需要分析的指标，例如“销售数量”和“销售金额”等。\r\n\r\n```js\r\noption = {\r\n  xAxis: {\r\n    type: 'time',\r\n    name: '销售时间'\r\n    // ...\r\n  },\r\n  yAxis: {\r\n    type: 'value',\r\n    name: '销售数量'\r\n    // ...\r\n  }\r\n  // ...\r\n};\r\n```\r\n\r\n当 x 轴（水平坐标轴）跨度很大，可以采用区域缩放方式灵活显示数据内容。\r\n\r\n```js\r\noption = {\r\n  xAxis: {\r\n    type: 'time',\r\n    name: '销售时间'\r\n    // ...\r\n  },\r\n  yAxis: {\r\n    type: 'value',\r\n    name: '销售数量'\r\n    // ...\r\n  },\r\n  dataZoom: [\r\n    // ...\r\n  ]\r\n  // ...\r\n};\r\n```\r\n\r\n在二维数据中，轴也可以有多个。ECharts 中一般情况下单个 grid 组件最多只能放两个 x/y 轴，多于两个 x/y 轴需要通过配置 [offset](${optionPath}xAxis.offset) 属性防止同个位置多个轴的重叠。两个 x 轴显示在上下，两个 y 轴显示在左右两侧。\r\n\r\n```js\r\noption = {\r\n  xAxis: {\r\n    type: 'time',\r\n    name: '销售时间'\r\n    // ...\r\n  },\r\n  yAxis: [\r\n    {\r\n      type: 'value',\r\n      name: '销售数量'\r\n      // ...\r\n    },\r\n    {\r\n      type: 'value',\r\n      name: '销售金额'\r\n      // ...\r\n    }\r\n  ]\r\n  // ...\r\n};\r\n```\r\n\r\n## 轴线\r\n\r\nECharts 提供了轴线 [axisLine](${optionPath}xAxis.axisLine) 相关的配置，我们可以根据实际情况调整，例如轴线两端的箭头，轴线的样式等。\r\n\r\n```js\r\noption = {\r\n  xAxis: {\r\n    axisLine: {\r\n      symbol: 'arrow',\r\n      lineStyle: {\r\n        type: 'dashed'\r\n        // ...\r\n      }\r\n    }\r\n    // ...\r\n  },\r\n  yAxis: {\r\n    axisLine: {\r\n      symbol: 'arrow',\r\n      lineStyle: {\r\n        type: 'dashed'\r\n        // ...\r\n      }\r\n    }\r\n  }\r\n  // ...\r\n};\r\n```\r\n\r\n## 刻度\r\n\r\nECharts 提供了轴线 [axisTick](${optionPath}xAxis.axisTick) 相关的配置，我们可以根据实际情况调整，例如刻度线的长度，样式等。\r\n\r\n```js\r\noption = {\r\n  xAxis: {\r\n    axisTick: {\r\n      length: 6,\r\n      lineStyle: {\r\n        type: 'dashed'\r\n        // ...\r\n      }\r\n    }\r\n    // ...\r\n  },\r\n  yAxis: {\r\n    axisTick: {\r\n      length: 6,\r\n      lineStyle: {\r\n        type: 'dashed'\r\n        // ...\r\n      }\r\n    }\r\n  }\r\n  // ...\r\n};\r\n```\r\n\r\n## 刻度标签\r\n\r\nECharts 提供了轴线 [axisLabel](${optionPath}xAxis.axisLabel) 相关的配置，我们可以根据实际情况调整，例如文字对齐方式，自定义刻度标签内容等。\r\n\r\n```js\r\noption = {\r\n  xAxis: {\r\n    axisLabel: {\r\n      formatter: '{value} kg',\r\n      align: 'center'\r\n      // ...\r\n    }\r\n    // ...\r\n  },\r\n  yAxis: {\r\n    axisLabel: {\r\n      formatter: '{value} 元',\r\n      align: 'center'\r\n      // ...\r\n    }\r\n  }\r\n  // ...\r\n};\r\n```\r\n\r\n## 示例\r\n\r\n图左侧的 y 轴代表东京月平均气温，右侧的 y 轴表示东京降水量，x 轴表示时间。两组 y 轴在一起，反映了平均气温和降水量间的趋势关系。\r\n\r\n```js live\r\noption = {\r\n  tooltip: {\r\n    trigger: 'axis',\r\n    axisPointer: { type: 'cross' }\r\n  },\r\n  legend: {},\r\n  xAxis: [\r\n    {\r\n      type: 'category',\r\n      axisTick: {\r\n        alignWithLabel: true\r\n      },\r\n      data: [\r\n        '1月',\r\n        '2月',\r\n        '3月',\r\n        '4月',\r\n        '5月',\r\n        '6月',\r\n        '7月',\r\n        '8月',\r\n        '9月',\r\n        '10月',\r\n        '11月',\r\n        '12月'\r\n      ]\r\n    }\r\n  ],\r\n  yAxis: [\r\n    {\r\n      type: 'value',\r\n      name: '降水量',\r\n      min: 0,\r\n      max: 250,\r\n      position: 'right',\r\n      axisLabel: {\r\n        formatter: '{value} ml'\r\n      }\r\n    },\r\n    {\r\n      type: 'value',\r\n      name: '温度',\r\n      min: 0,\r\n      max: 25,\r\n      position: 'left',\r\n      axisLabel: {\r\n        formatter: '{value} °C'\r\n      }\r\n    }\r\n  ],\r\n  series: [\r\n    {\r\n      name: '降水量',\r\n      type: 'bar',\r\n      yAxisIndex: 0,\r\n      data: [6, 32, 70, 86, 68.7, 100.7, 125.6, 112.2, 78.7, 48.8, 36.0, 19.3]\r\n    },\r\n    {\r\n      name: '温度',\r\n      type: 'line',\r\n      smooth: true,\r\n      yAxisIndex: 1,\r\n      data: [\r\n        6.0,\r\n        10.2,\r\n        10.3,\r\n        11.5,\r\n        10.3,\r\n        13.2,\r\n        14.3,\r\n        16.4,\r\n        18.0,\r\n        16.5,\r\n        12.0,\r\n        5.2\r\n      ]\r\n    }\r\n  ]\r\n};\r\n```\r\n\r\n这里简要介绍了坐标轴相关的常用配置项及用法，更多关于坐标轴配置项及用法请移步[官网](${optionPath}xAxis)。\r\n"}}]);