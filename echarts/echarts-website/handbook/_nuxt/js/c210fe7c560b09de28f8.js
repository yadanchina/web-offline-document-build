(window.webpackJsonp=window.webpackJsonp||[]).push([[115],{554:function(r,n,t){"use strict";t.r(n),n.default="# 阶梯瀑布图\r\n\r\nApache ECharts 中并没有单独的瀑布图类型，但是我们可以使用堆叠的柱状图模拟该效果。\r\n\r\n假设数据数组中的值是表示对前一个值的增减：\r\n\r\n```js\r\nvar data = [900, 345, 393, -108, -154, 135, 178, 286, -119, -361, -203];\r\n```\r\n\r\n也就是第一个数据是 `900`，第二个数据 `345` 表示的是在 `900` 的基础上增加了 `345`……将这个数据展示为阶梯瀑布图时，我们可以使用三个系列：第一个是不可交互的透明系列，用来实现“悬空”的柱状图效果；第二个系列用来表示正数；第三个系列用来表示负数。\r\n\r\n```js live\r\nvar data = [900, 345, 393, -108, -154, 135, 178, 286, -119, -361, -203];\r\nvar help = [];\r\nvar positive = [];\r\nvar negative = [];\r\nfor (var i = 0, sum = 0; i < data.length; ++i) {\r\n  if (data[i] >= 0) {\r\n    positive.push(data[i]);\r\n    negative.push('-');\r\n  } else {\r\n    positive.push('-');\r\n    negative.push(-data[i]);\r\n  }\r\n\r\n  if (i === 0) {\r\n    help.push(0);\r\n  } else {\r\n    sum += data[i - 1];\r\n    if (data[i] < 0) {\r\n      help.push(sum + data[i]);\r\n    } else {\r\n      help.push(sum);\r\n    }\r\n  }\r\n}\r\n\r\noption = {\r\n  title: {\r\n    text: 'Waterfall'\r\n  },\r\n  grid: {\r\n    left: '3%',\r\n    right: '4%',\r\n    bottom: '3%',\r\n    containLabel: true\r\n  },\r\n  xAxis: {\r\n    type: 'category',\r\n    splitLine: { show: false },\r\n    data: (function() {\r\n      var list = [];\r\n      for (var i = 1; i <= 11; i++) {\r\n        list.push('Oct/' + i);\r\n      }\r\n      return list;\r\n    })()\r\n  },\r\n  yAxis: {\r\n    type: 'value'\r\n  },\r\n  series: [\r\n    {\r\n      type: 'bar',\r\n      stack: 'all',\r\n      itemStyle: {\r\n        normal: {\r\n          barBorderColor: 'rgba(0,0,0,0)',\r\n          color: 'rgba(0,0,0,0)'\r\n        },\r\n        emphasis: {\r\n          barBorderColor: 'rgba(0,0,0,0)',\r\n          color: 'rgba(0,0,0,0)'\r\n        }\r\n      },\r\n      data: help\r\n    },\r\n    {\r\n      name: 'positive',\r\n      type: 'bar',\r\n      stack: 'all',\r\n      data: positive\r\n    },\r\n    {\r\n      name: 'negative',\r\n      type: 'bar',\r\n      stack: 'all',\r\n      data: negative,\r\n      itemStyle: {\r\n        color: '#f33'\r\n      }\r\n    }\r\n  ]\r\n};\r\n```\r\n"}}]);