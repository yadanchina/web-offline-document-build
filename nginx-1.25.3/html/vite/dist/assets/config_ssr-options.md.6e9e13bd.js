import{_ as e,o as r,c as s,a as t}from"./app.dbaf790a.js";const _=JSON.parse('{"title":"SSR 选项","description":"","frontmatter":{},"headers":[{"level":2,"title":"ssr.external","slug":"ssr-external","link":"#ssr-external","children":[]},{"level":2,"title":"ssr.noExternal","slug":"ssr-noexternal","link":"#ssr-noexternal","children":[]},{"level":2,"title":"ssr.target","slug":"ssr-target","link":"#ssr-target","children":[]},{"level":2,"title":"ssr.format","slug":"ssr-format","link":"#ssr-format","children":[]}],"relativePath":"config/ssr-options.md"}'),a={name:"config/ssr-options.md"},n=t('<h1 id="ssr-options" tabindex="-1">SSR 选项 <a class="header-anchor" href="#ssr-options" aria-hidden="true">#</a></h1><h2 id="ssr-external" tabindex="-1">ssr.external <a class="header-anchor" href="#ssr-external" aria-hidden="true">#</a></h2><ul><li><strong>类型:</strong> <code>string[]</code></li><li><strong>相关：</strong> <a href="/guide/ssr.html#ssr-externals">SSR 外部化</a></li></ul><p>列出的是要为 SSR 强制外部化的依赖。</p><h2 id="ssr-noexternal" tabindex="-1">ssr.noExternal <a class="header-anchor" href="#ssr-noexternal" aria-hidden="true">#</a></h2><ul><li><strong>类型：</strong> <code>string | RegExp | (string | RegExp)[] | true</code></li><li><strong>相关：</strong> <a href="/guide/ssr.html#ssr-externals">SSR 外部化</a></li></ul><p>列出的是防止被 SSR 外部化依赖项。如果设为 <code>true</code>，将没有依赖被外部化。</p><h2 id="ssr-target" tabindex="-1">ssr.target <a class="header-anchor" href="#ssr-target" aria-hidden="true">#</a></h2><ul><li><strong>类型：</strong> <code>&#39;node&#39; | &#39;webworker&#39;</code></li><li><strong>默认：</strong> <code>node</code></li></ul><p>SSR 服务器的构建目标。</p><h2 id="ssr-format" tabindex="-1">ssr.format <a class="header-anchor" href="#ssr-format" aria-hidden="true">#</a></h2><ul><li><strong>实验性：</strong> <a href="https://github.com/vitejs/vite/discussions/13816" target="_blank" rel="noreferrer">CJS 的支持将在 Vite 5 中移除</a></li><li><strong>弃用</strong> 在 Vite 5 将只支持 ESM 输出</li><li><strong>类型：</strong> <code>&#39;esm&#39; | &#39;cjs&#39;</code></li><li><strong>默认：</strong> <code>esm</code></li></ul><p>SSR 服务器的构建语法格式。从 Vite v3 开始，SSR 构建默认生成 ESM 格式。设置为 <code>&#39;cjs&#39;</code> 可以构建为 CJS 格式，但不推荐这样做。这个选项被标记为实验性的，以便给用户更多时间更新到 ESM。CJS 构建需要复杂的外部化启发式，但在 ESM 格式中则不需要。</p>',13),o=[n];function i(l,d,c,h,g,S){return r(),s("div",null,o)}const p=e(a,[["render",i]]);export{_ as __pageData,p as default};
