import{_ as s,o as n,c as l,a}from"./app.dbaf790a.js";const C=JSON.parse('{"title":"共享配置","description":"","frontmatter":{},"headers":[{"level":2,"title":"root","slug":"root","link":"#root","children":[]},{"level":2,"title":"base","slug":"base","link":"#base","children":[]},{"level":2,"title":"mode","slug":"mode","link":"#mode","children":[]},{"level":2,"title":"define","slug":"define","link":"#define","children":[]},{"level":2,"title":"plugins","slug":"plugins","link":"#plugins","children":[]},{"level":2,"title":"publicDir","slug":"publicdir","link":"#publicdir","children":[]},{"level":2,"title":"cacheDir","slug":"cachedir","link":"#cachedir","children":[]},{"level":2,"title":"resolve.alias","slug":"resolve-alias","link":"#resolve-alias","children":[]},{"level":2,"title":"resolve.dedupe","slug":"resolve-dedupe","link":"#resolve-dedupe","children":[]},{"level":2,"title":"resolve.conditions","slug":"resolve-conditions","link":"#resolve-conditions","children":[]},{"level":2,"title":"resolve.mainFields","slug":"resolve-mainfields","link":"#resolve-mainfields","children":[]},{"level":2,"title":"resolve.browserField","slug":"resolve-browserfield","link":"#resolve-browserfield","children":[]},{"level":2,"title":"resolve.extensions","slug":"resolve-extensions","link":"#resolve-extensions","children":[]},{"level":2,"title":"resolve.preserveSymlinks","slug":"resolve-preservesymlinks","link":"#resolve-preservesymlinks","children":[]},{"level":2,"title":"css.modules","slug":"css-modules","link":"#css-modules","children":[]},{"level":2,"title":"css.postcss","slug":"css-postcss","link":"#css-postcss","children":[]},{"level":2,"title":"css.preprocessorOptions","slug":"css-preprocessoroptions","link":"#css-preprocessoroptions","children":[]},{"level":2,"title":"css.devSourcemap","slug":"css-devsourcemap","link":"#css-devsourcemap","children":[]},{"level":2,"title":"css.transformer","slug":"css-transformer","link":"#css-transformer","children":[]},{"level":2,"title":"css.lightningcss","slug":"css-lightningcss","link":"#css-lightningcss","children":[]},{"level":2,"title":"json.namedExports","slug":"json-namedexports","link":"#json-namedexports","children":[]},{"level":2,"title":"json.stringify","slug":"json-stringify","link":"#json-stringify","children":[]},{"level":2,"title":"esbuild","slug":"esbuild","link":"#esbuild","children":[]},{"level":2,"title":"assetsInclude","slug":"assetsinclude","link":"#assetsinclude","children":[]},{"level":2,"title":"logLevel","slug":"loglevel","link":"#loglevel","children":[]},{"level":2,"title":"customLogger","slug":"customlogger","link":"#customlogger","children":[]},{"level":2,"title":"clearScreen","slug":"clearscreen","link":"#clearscreen","children":[]},{"level":2,"title":"envDir","slug":"envdir","link":"#envdir","children":[]},{"level":2,"title":"envPrefix","slug":"envprefix","link":"#envprefix","children":[]},{"level":2,"title":"appType","slug":"apptype","link":"#apptype","children":[]}],"relativePath":"config/shared-options.md"}'),e={name:"config/shared-options.md"},o=a(`<h1 id="shared-options" tabindex="-1">共享配置 <a class="header-anchor" href="#shared-options" aria-hidden="true">#</a></h1><h2 id="root" tabindex="-1">root <a class="header-anchor" href="#root" aria-hidden="true">#</a></h2><ul><li><strong>类型：</strong> <code>string</code></li><li><strong>默认：</strong> <code>process.cwd()</code></li></ul><p>项目根目录（<code>index.html</code> 文件所在的位置）。可以是一个绝对路径，或者一个相对于该配置文件本身的相对路径。</p><p>更多细节请见 <a href="/guide/#index-html-and-project-root">项目根目录</a>。</p><h2 id="base" tabindex="-1">base <a class="header-anchor" href="#base" aria-hidden="true">#</a></h2><ul><li><strong>类型：</strong> <code>string</code></li><li><strong>默认：</strong> <code>/</code></li></ul><p>开发或生产环境服务的公共基础路径。合法的值包括以下几种：</p><ul><li>绝对 URL 路径名，例如 <code>/foo/</code></li><li>完整的 URL，例如 <code>https://foo.com/</code></li><li>空字符串或 <code>./</code>（用于嵌入形式的开发）</li></ul><p>更多信息详见 <a href="/guide/build.html#public-base-path">公共基础路径</a>。</p><h2 id="mode" tabindex="-1">mode <a class="header-anchor" href="#mode" aria-hidden="true">#</a></h2><ul><li><strong>类型：</strong> <code>string</code></li><li><strong>默认：</strong> <code>&#39;development&#39;</code> 用于开发，<code>&#39;production&#39;</code> 用于构建</li></ul><p>在配置中指明将会把 <strong>serve 和 build</strong> 时的模式 <strong>都</strong> 覆盖掉。也可以通过命令行 <code>--mode</code> 选项来重写。</p><p>查看 <a href="/guide/env-and-mode.html">环境变量与模式</a> 章节获取更多细节。</p><h2 id="define" tabindex="-1">define <a class="header-anchor" href="#define" aria-hidden="true">#</a></h2><ul><li><strong>类型：</strong> <code>Record&lt;string, any&gt;</code></li></ul><p>定义全局常量替换方式。其中每项在开发环境下会被定义在全局，而在构建时被静态替换。</p><ul><li><p>String 值会以原始表达式形式使用，所以如果定义了一个字符串常量，<strong>它需要被显式地打引号。</strong>（例如使用 <code>JSON.stringify</code>）</p></li><li><p>为了与 <a href="https://esbuild.github.io/api/#define" target="_blank" rel="noreferrer">esbuild 的行为</a>保持一致，表达式必须为一个 JSON 对象（null、boolean、number、string、数组或对象），亦或是一个单独的标识符。</p></li><li><p>替换只会在匹配到周围不是其他字母、数字、<code>_</code> 或 <code>$</code> 时执行。</p></li></ul><div class="warning custom-block"><p class="custom-block-title">WARNING</p><p>因为它是不经过任何语法分析，直接替换文本实现的，所以我们建议只对 CONSTANTS 使用 <code>define</code>。</p><p>例如，<code>p<wbr>rocess.env.FOO</code> 和 <code>__APP_VERSION__</code> 就非常适合。但 <code>process</code> 或 <code>global</code> 不应使用此选项。变量相关应使用 shim 或 polyfill 代替。</p></div><div class="tip custom-block"><p class="custom-block-title">NOTE</p><p>对于使用 TypeScript 的开发者来说，请确保在 <code>env.d.ts</code> 或 <code>vite-env.d.ts</code> 文件中添加类型声明，以获得类型检查以及代码提示。</p><p>示例：</p><div class="language-ts"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#676E95;font-style:italic;">// vite-env.d.ts</span></span>
<span class="line"><span style="color:#C792EA;">declare</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">const</span><span style="color:#A6ACCD;"> __APP_VERSION__</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">string</span></span>
<span class="line"></span></code></pre></div></div><div class="tip custom-block"><p class="custom-block-title">NOTE</p><p>由于开发模式和构建模式实现 <code>define</code> 的差异性，我们应该避免采用一些可能导致不一致的用例。</p><p>例如：</p><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#C792EA;">const</span><span style="color:#A6ACCD;"> obj </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">  __NAME__</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#676E95;font-style:italic;">// 不要以缩写形式定义对象属性</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#F07178;">__KEY__</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> value </span><span style="color:#676E95;font-style:italic;">// 不要定义对象的 key</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span></code></pre></div></div><h2 id="plugins" tabindex="-1">plugins <a class="header-anchor" href="#plugins" aria-hidden="true">#</a></h2><ul><li><strong>类型：</strong> <code>(Plugin | Plugin[] | Promise&lt;Plugin | Plugin[]&gt;)[]</code></li></ul><p>需要用到的插件数组。Falsy 虚值的插件将被忽略，插件数组将被扁平化（flatten）。查看 <a href="/guide/api-plugin.html">插件 API</a> 获取 Vite 插件的更多细节。</p><h2 id="publicdir" tabindex="-1">publicDir <a class="header-anchor" href="#publicdir" aria-hidden="true">#</a></h2><ul><li><strong>类型：</strong> <code>string | false</code></li><li><strong>默认：</strong> <code>&quot;public&quot;</code></li></ul><p>作为静态资源服务的文件夹。该目录中的文件在开发期间在 <code>/</code> 处提供，并在构建期间复制到 <code>outDir</code> 的根目录，并且始终按原样提供或复制而无需进行转换。该值可以是文件系统的绝对路径，也可以是相对于项目根目录的相对路径。</p><p>将 <code>publicDir</code> 设定为 <code>false</code> 可以关闭此项功能。</p><p>欲了解更多，请参阅 <a href="/guide/assets.html#the-public-directory"><code>public</code> 目录</a>。</p><h2 id="cachedir" tabindex="-1">cacheDir <a class="header-anchor" href="#cachedir" aria-hidden="true">#</a></h2><ul><li><strong>类型：</strong> <code>string</code></li><li><strong>默认：</strong> <code>&quot;node_modules/.vite&quot;</code></li></ul><p>存储缓存文件的目录。此目录下会存储预打包的依赖项或 vite 生成的某些缓存文件，使用缓存可以提高性能。如需重新生成缓存文件，你可以使用 <code>--force</code> 命令行选项或手动删除目录。此选项的值可以是文件的绝对路径，也可以是以项目根目录为基准的相对路径。当没有检测到 package.json 时，则默认为 <code>.vite</code>。</p><h2 id="resolve-alias" tabindex="-1">resolve.alias <a class="header-anchor" href="#resolve-alias" aria-hidden="true">#</a></h2><ul><li><strong>类型：</strong><code>Record&lt;string, string&gt; | Array&lt;{ find: string | RegExp, replacement: string, customResolver?: ResolverFunction | ResolverObject }&gt;</code></li></ul><p>将会被传递到 <code>@rollup/plugin-alias</code> 作为 <a href="https://github.com/rollup/plugins/tree/master/packages/alias#entries" target="_blank" rel="noreferrer">entries 的选项</a>。也可以是一个对象，或一个 <code>{ find, replacement, customResolver }</code> 的数组。</p><p>当使用文件系统路径的别名时，请始终使用绝对路径。相对路径的别名值会原封不动地被使用，因此无法被正常解析。</p><p>更高级的自定义解析方法可以通过 <a href="/guide/api-plugin.html">插件</a> 实现。</p><div class="warning custom-block"><p class="custom-block-title">在 SSR 中使用</p><p>如果你已经为 <a href="/guide/ssr.html#ssr-externals">SSR 外部化的依赖</a> 配置了别名，你可能想要为真实的 <code>node_modules</code> 包配别名。<a href="https://classic.yarnpkg.com/en/docs/cli/add/#toc-yarn-add-alias" target="_blank" rel="noreferrer">Yarn</a> 和 <a href="https://pnpm.io/aliases/" target="_blank" rel="noreferrer">pnpm</a> 都支持通过 <code>npm:</code> 前缀配置别名。</p></div><h2 id="resolve-dedupe" tabindex="-1">resolve.dedupe <a class="header-anchor" href="#resolve-dedupe" aria-hidden="true">#</a></h2><ul><li><strong>类型：</strong> <code>string[]</code></li></ul><p>如果你在你的应用程序中有相同依赖的副本（比如 monorepos），请使用此选项强制 Vite 始终将列出的依赖项解析为同一副本（从项目根目录）。</p><div class="warning custom-block"><p class="custom-block-title">SSR + ESM</p><p>对于服务端渲染构建，配置项 <code>build.rollupOptions.output</code> 为 ESM 构建输出时去重过程将不工作。一个替代方案是先使用 CJS 构建输出，直到 ESM 在插件中有了更好的模块加载支持。</p></div><h2 id="resolve-conditions" tabindex="-1">resolve.conditions <a class="header-anchor" href="#resolve-conditions" aria-hidden="true">#</a></h2><ul><li><strong>类型：</strong> <code>string[]</code></li></ul><p>解决程序包中 <a href="https://nodejs.org/api/packages.html#packages_conditional_exports" target="_blank" rel="noreferrer">情景导出</a> 时的其他允许条件。</p><p>一个带有情景导出的包可能在它的 <code>package.json</code> 中有以下 <code>exports</code> 字段：</p><div class="language-json"><button title="Copy Code" class="copy"></button><span class="lang">json</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C792EA;">exports</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">&quot;</span><span style="color:#FFCB6B;">.</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">      </span><span style="color:#89DDFF;">&quot;</span><span style="color:#F78C6C;">import</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">./index.esm.js</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#A6ACCD;">      </span><span style="color:#89DDFF;">&quot;</span><span style="color:#F78C6C;">require</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">./index.cjs.js</span><span style="color:#89DDFF;">&quot;</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span></code></pre></div><p>在这里，<code>import</code> 和 <code>require</code> 被称为“情景”。情景可以嵌套，并且应该从最特定的到最不特定的指定。</p><p>Vite 有一个“允许的情景”列表，并且会匹配列表中第一个情景。默认允许的情景是：<code>import</code>，<code>module</code>，<code>browser</code>，<code>default</code> 和基于当前情景为 <code>production/development</code>。<code>resolve.conditions</code> 配置项使得我们可以指定其他允许的情景。</p><div class="warning custom-block"><p class="custom-block-title">解决子路径导出问题</p><p>导出以“/”结尾的 key 已被 Node 弃用，可能无法正常工作。请联系包的作者改为使用 <a href="https://nodejs.org/api/packages.html#package-entry-points" target="_blank" rel="noreferrer"><code>*</code> 子路径模式</a>。</p></div><h2 id="resolve-mainfields" tabindex="-1">resolve.mainFields <a class="header-anchor" href="#resolve-mainfields" aria-hidden="true">#</a></h2><ul><li><strong>类型：</strong> <code>string[]</code></li><li><strong>默认：</strong> <code>[&#39;module&#39;, &#39;jsnext:main&#39;, &#39;jsnext&#39;]</code></li></ul><p><code>package.json</code> 中，在解析包的入口点时尝试的字段列表。注意：这比从 <code>exports</code> 字段解析的情景导出优先级低：如果一个入口点从 <code>exports</code> 成功解析，<code>resolve.mainFields</code> 将被忽略。</p><h2 id="resolve-browserfield" tabindex="-1">resolve.browserField <a class="header-anchor" href="#resolve-browserfield" aria-hidden="true">#</a></h2><ul><li><strong>类型：</strong> <code>boolean</code></li><li><strong>默认：</strong> <code>true</code></li><li><strong>已废弃</strong></li></ul><p>是否启用对 <code>browser</code> 字段的解析。</p><p>在未来，<code>resolve.mainFields</code> 的默认值会变成 <code>[&#39;browser&#39;, &#39;module&#39;, &#39;jsnext:main&#39;, &#39;jsnext&#39;]</code> 而这个选项将被移除。</p><h2 id="resolve-extensions" tabindex="-1">resolve.extensions <a class="header-anchor" href="#resolve-extensions" aria-hidden="true">#</a></h2><ul><li><strong>类型：</strong> <code>string[]</code></li><li><strong>默认：</strong> <code>[&#39;.mjs&#39;, &#39;.js&#39;, &#39;.mts&#39;, &#39;.ts&#39;, &#39;.jsx&#39;, &#39;.tsx&#39;, &#39;.json&#39;]</code></li></ul><p>导入时想要省略的扩展名列表。注意，<strong>不</strong> 建议忽略自定义导入类型的扩展名（例如：<code>.vue</code>），因为它会影响 IDE 和类型支持。</p><h2 id="resolve-preservesymlinks" tabindex="-1">resolve.preserveSymlinks <a class="header-anchor" href="#resolve-preservesymlinks" aria-hidden="true">#</a></h2><ul><li><strong>类型：</strong> <code>boolean</code></li><li><strong>默认：</strong> <code>false</code></li></ul><p>启用此选项会使 Vite 通过原始文件路径（即不跟随符号链接的路径）而不是真正的文件路径（即跟随符号链接后的路径）确定文件身份。</p><ul><li><strong>相关：</strong> <a href="https://esbuild.github.io/api/#preserve-symlinks" target="_blank" rel="noreferrer">esbuild#preserve-symlinks</a>，<a href="https://webpack.js.org/configuration/resolve/#resolvesymlinks" target="_blank" rel="noreferrer">webpack#resolve.symlinks </a></li></ul><h2 id="css-modules" tabindex="-1">css.modules <a class="header-anchor" href="#css-modules" aria-hidden="true">#</a></h2><ul><li><strong>类型：</strong></li></ul><div class="language-ts"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#C792EA;">interface</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">CSSModulesOptions</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#F07178;">scopeBehaviour</span><span style="color:#89DDFF;">?:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">global</span><span style="color:#89DDFF;">&#39;</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">|</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">local</span><span style="color:#89DDFF;">&#39;</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#F07178;">globalModulePaths</span><span style="color:#89DDFF;">?:</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">RegExp</span><span style="color:#A6ACCD;">[]</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#F07178;">generateScopedName</span><span style="color:#89DDFF;">?:</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">|</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">string</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">|</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">(</span><span style="color:#A6ACCD;font-style:italic;">name</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">string</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#A6ACCD;font-style:italic;">filename</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">string</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#A6ACCD;font-style:italic;">css</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">string</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">=&gt;</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">string</span><span style="color:#A6ACCD;">)</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#F07178;">hashPrefix</span><span style="color:#89DDFF;">?:</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">string</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#676E95;font-style:italic;">/**</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">   * 默认：null</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">   */</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#F07178;">localsConvention</span><span style="color:#89DDFF;">?:</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">|</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">camelCase</span><span style="color:#89DDFF;">&#39;</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">|</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">camelCaseOnly</span><span style="color:#89DDFF;">&#39;</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">|</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">dashes</span><span style="color:#89DDFF;">&#39;</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">|</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">dashesOnly</span><span style="color:#89DDFF;">&#39;</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">|</span><span style="color:#A6ACCD;"> </span><span style="color:#F07178;">null</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span></code></pre></div><p>配置 CSS modules 的行为。选项将被传递给 <a href="https://github.com/css-modules/postcss-modules" target="_blank" rel="noreferrer">postcss-modules</a>。</p><p>当使用 <a href="./../guide/features.html#lightning-css">Lightning CSS</a> 时，该选项不会产生任何效果。如果要启用该选项，则应该使用 <a href="https://lightningcss.dev/css-modules.html" target="_blank" rel="noreferrer"><code>css.lightningcss.cssModules</code></a> 来替代。</p><h2 id="css-postcss" tabindex="-1">css.postcss <a class="header-anchor" href="#css-postcss" aria-hidden="true">#</a></h2><ul><li><strong>类型：</strong> <code>string | (postcss.ProcessOptions &amp; { plugins?: postcss.AcceptedPlugin[] })</code></li></ul><p>内联的 PostCSS 配置（格式同 <code>postcss.config.js</code>），或者一个（默认基于项目根目录的）自定义的 PostCSS 配置路径。</p><p>对内联的 POSTCSS 配置，它期望接收与 <code>postcss.config.js</code> 一致的格式。但对于 <code>plugins</code> 属性有些特别，只接收使用 <a href="https://github.com/postcss/postcss-load-config/blob/main/README.md#array" target="_blank" rel="noreferrer">数组格式</a>。</p><p>搜索是使用 <a href="https://github.com/postcss/postcss-load-config" target="_blank" rel="noreferrer">postcss-load-config</a> 完成的，只有被支持的文件名才会被加载。</p><p>注意：如果提供了该内联配置，Vite 将不会搜索其他 PostCSS 配置源。</p><h2 id="css-preprocessoroptions" tabindex="-1">css.preprocessorOptions <a class="header-anchor" href="#css-preprocessoroptions" aria-hidden="true">#</a></h2><ul><li><strong>类型：</strong> <code>Record&lt;string, object&gt;</code></li></ul><p>指定传递给 CSS 预处理器的选项。文件扩展名用作选项的键。每个预处理器支持的选项可以在它们各自的文档中找到：</p><ul><li><code>sass</code>/<code>scss</code> - <a href="https://sass-lang.com/documentation/js-api/interfaces/LegacyStringOptions" target="_blank" rel="noreferrer">选项</a>。</li><li><code>less</code> - <a href="https://lesscss.org/usage/#less-options" target="_blank" rel="noreferrer">选项</a>。</li><li><code>styl</code>/<code>stylus</code> - 仅支持 <a href="https://stylus-lang.com/docs/js.html#define-name-node" target="_blank" rel="noreferrer"><code>define</code></a>，可以作为对象传递。</li></ul><p>所有预处理器选项还支持 <code>additionalData</code> 选项，可以用于为每个样式内容注入额外代码。请注意，如果注入的是实际的样式而不仅仅是变量时，那么这些样式将会在最终的打包产物中重复出现。</p><p>示例：</p><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;font-style:italic;">export</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;font-style:italic;">default</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">defineConfig</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#F07178;">css</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#F07178;">preprocessorOptions</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">      </span><span style="color:#F07178;">scss</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#F07178;">additionalData</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">\`</span><span style="color:#C3E88D;">$injectedColor: orange;</span><span style="color:#89DDFF;">\`</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#A6ACCD;">      </span><span style="color:#89DDFF;">},</span></span>
<span class="line"><span style="color:#A6ACCD;">      </span><span style="color:#F07178;">less</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#F07178;">math</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">parens-division</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#A6ACCD;">      </span><span style="color:#89DDFF;">},</span></span>
<span class="line"><span style="color:#A6ACCD;">      </span><span style="color:#F07178;">styl</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#F07178;">define</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">          </span><span style="color:#F07178;">$specialColor</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">new</span><span style="color:#A6ACCD;"> stylus</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">nodes</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">RGBA</span><span style="color:#A6ACCD;">(</span><span style="color:#F78C6C;">51</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">197</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">255</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">1</span><span style="color:#A6ACCD;">)</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#89DDFF;">},</span></span>
<span class="line"><span style="color:#A6ACCD;">      </span><span style="color:#89DDFF;">},</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">},</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">},</span></span>
<span class="line"><span style="color:#89DDFF;">}</span><span style="color:#A6ACCD;">)</span></span>
<span class="line"></span></code></pre></div><h2 id="css-devsourcemap" tabindex="-1">css.devSourcemap <a class="header-anchor" href="#css-devsourcemap" aria-hidden="true">#</a></h2><ul><li><strong>实验性：</strong> <a href="https://github.com/vitejs/vite/discussions/13845" target="_blank" rel="noreferrer">提供反馈</a></li><li><strong>类型：</strong> <code>boolean</code></li><li><strong>默认：</strong> <code>false</code></li></ul><p>在开发过程中是否启用 sourcemap。</p><h2 id="css-transformer" tabindex="-1">css.transformer <a class="header-anchor" href="#css-transformer" aria-hidden="true">#</a></h2><ul><li><strong>实验性：</strong> <a href="https://github.com/vitejs/vite/discussions/13835" target="_blank" rel="noreferrer">提供反馈</a></li><li><strong>类型：</strong> <code>&#39;postcss&#39; | &#39;lightningcss&#39;</code></li><li><strong>默认：</strong> <code>&#39;postcss&#39;</code></li></ul><p>该选项用于选择用于 CSS 处理的引擎。详细信息请查看 <a href="./../guide/features.html#lightning-css">Lightning CSS</a>。</p><h2 id="css-lightningcss" tabindex="-1">css.lightningcss <a class="header-anchor" href="#css-lightningcss" aria-hidden="true">#</a></h2><ul><li><strong>实验性：</strong> <a href="https://github.com/vitejs/vite/discussions/13835" target="_blank" rel="noreferrer">提供反馈</a></li><li><strong>类型：</strong></li></ul><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;font-style:italic;">import</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;font-style:italic;">type</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#A6ACCD;">CSSModulesConfig</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#A6ACCD;">Drafts</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#A6ACCD;">Features</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#A6ACCD;">NonStandard</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#A6ACCD;">PseudoClasses</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#A6ACCD;">Targets</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#89DDFF;">}</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;font-style:italic;">from</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">lightningcss</span><span style="color:#89DDFF;">&#39;</span></span>
<span class="line"></span></code></pre></div><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#A6ACCD;">targets</span><span style="color:#89DDFF;">?:</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">Targets</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#A6ACCD;">include</span><span style="color:#89DDFF;">?:</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">Features</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#A6ACCD;">exclude</span><span style="color:#89DDFF;">?:</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">Features</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#A6ACCD;">drafts</span><span style="color:#89DDFF;">?:</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">Drafts</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#A6ACCD;">nonStandard</span><span style="color:#89DDFF;">?:</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">NonStandard</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#A6ACCD;">pseudoClasses</span><span style="color:#89DDFF;">?:</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">PseudoClasses</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#A6ACCD;">unusedSymbols</span><span style="color:#89DDFF;">?:</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">string</span><span style="color:#F07178;">[]</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#A6ACCD;">cssModules</span><span style="color:#89DDFF;">?:</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">CSSModulesConfig</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#89DDFF;">  </span><span style="color:#676E95;font-style:italic;">// ...</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span></code></pre></div><p>该选项用于配置 Lightning CSS。有关完整的转换选项，请参阅 <a href="https://github.com/parcel-bundler/lightningcss/blob/master/node/index.d.ts" target="_blank" rel="noreferrer">Lightning CSS 仓库</a>。</p><h2 id="json-namedexports" tabindex="-1">json.namedExports <a class="header-anchor" href="#json-namedexports" aria-hidden="true">#</a></h2><ul><li><strong>类型：</strong> <code>boolean</code></li><li><strong>默认：</strong> <code>true</code></li></ul><p>是否支持从 <code>.json</code> 文件中进行按名导入。</p><h2 id="json-stringify" tabindex="-1">json.stringify <a class="header-anchor" href="#json-stringify" aria-hidden="true">#</a></h2><ul><li><strong>类型：</strong> <code>boolean</code></li><li><strong>默认：</strong> <code>false</code></li></ul><p>若设置为 <code>true</code>，导入的 JSON 会被转换为 <code>export default JSON.parse(&quot;...&quot;)</code>，这样会比转译成对象字面量性能更好，尤其是当 JSON 文件较大的时候。</p><p>开启此项，则会禁用按名导入。</p><h2 id="esbuild" tabindex="-1">esbuild <a class="header-anchor" href="#esbuild" aria-hidden="true">#</a></h2><ul><li><strong>类型：</strong> <code>ESBuildOptions | false</code></li></ul><p><code>ESBuildOptions</code> 继承自 <a href="https://esbuild.github.io/api/#transform-api" target="_blank" rel="noreferrer">esbuild 转换选项</a>。最常见的用例是自定义 JSX：</p><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;font-style:italic;">export</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;font-style:italic;">default</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">defineConfig</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#F07178;">esbuild</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#F07178;">jsxFactory</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">h</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#F07178;">jsxFragment</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">Fragment</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">},</span></span>
<span class="line"><span style="color:#89DDFF;">}</span><span style="color:#A6ACCD;">)</span></span>
<span class="line"></span></code></pre></div><p>默认情况下，esbuild 会被应用在 <code>ts</code>、<code>jsx</code>、<code>tsx</code> 文件。你可以通过 <code>esbuild.include</code> 和 <code>esbuild.exclude</code> 对要处理的文件类型进行配置，这两个配置的值可以是一个正则表达式、一个 <a href="https://github.com/micromatch/picomatch#globbing-features" target="_blank" rel="noreferrer">picomatch</a> 模式，或是一个值为这两种类型的数组。</p><p>此外，你还可以通过 <code>esbuild.jsxInject</code> 来自动为每一个被 esbuild 转换的文件注入 JSX helper。</p><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;font-style:italic;">export</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;font-style:italic;">default</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">defineConfig</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#F07178;">esbuild</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#F07178;">jsxInject</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">\`</span><span style="color:#C3E88D;">import React from &#39;react&#39;</span><span style="color:#89DDFF;">\`</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">},</span></span>
<span class="line"><span style="color:#89DDFF;">}</span><span style="color:#A6ACCD;">)</span></span>
<span class="line"></span></code></pre></div><p>当 <a href="./build-options.html#build-minify"><code>build.minify</code></a> 为 <code>true</code> 时，所有最小化的优化过程都会被默认应用，要禁用它的 <a href="https://esbuild.github.io/api/#minify" target="_blank" rel="noreferrer">某些特定方面</a>，请设置 <code>esbuild.minifyIdentifiers</code>、<code>esbuild.minifySyntax</code> 或 <code>esbuild.minifyWhitespace</code> 三种选项其中任意一种为 <code>false</code>。注意 <code>esbuild.minify</code> 选项无法用于覆盖 <code>build.minify</code>。</p><p>设置为 <code>false</code> 来禁用 esbuild 转换。</p><h2 id="assetsinclude" tabindex="-1">assetsInclude <a class="header-anchor" href="#assetsinclude" aria-hidden="true">#</a></h2><ul><li><strong>类型：</strong> <code>string | RegExp | (string | RegExp)[]</code></li><li><strong>相关内容：</strong> <a href="/guide/assets.html">静态资源处理</a></li></ul><p>指定额外的 <a href="https://github.com/micromatch/picomatch#globbing-features" target="_blank" rel="noreferrer">picomatch 模式</a> 作为静态资源处理，因此：</p><ul><li><p>当从 HTML 引用它们或直接通过 <code>fetch</code> 或 XHR 请求它们时，它们将被插件转换管道排除在外。</p></li><li><p>从 JavaScript 导入它们将返回解析后的 URL 字符串（如果你设置了 <code>enforce: &#39;pre&#39;</code> 插件来处理不同的资产类型，这可能会被覆盖）。</p></li></ul><p>内建支持的资源类型列表可以在 <a href="https://github.com/vitejs/vite/blob/main/packages/vite/src/node/constants.ts" target="_blank" rel="noreferrer">这里</a> 找到。</p><p><strong>示例：</strong></p><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;font-style:italic;">export</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;font-style:italic;">default</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">defineConfig</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#F07178;">assetsInclude</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> [</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">**/*.gltf</span><span style="color:#89DDFF;">&#39;</span><span style="color:#A6ACCD;">]</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#89DDFF;">}</span><span style="color:#A6ACCD;">)</span></span>
<span class="line"></span></code></pre></div><h2 id="loglevel" tabindex="-1">logLevel <a class="header-anchor" href="#loglevel" aria-hidden="true">#</a></h2><ul><li><strong>类型：</strong> <code>&#39;info&#39; | &#39;warn&#39; | &#39;error&#39; | &#39;silent&#39;</code></li></ul><p>调整控制台输出的级别，默认为 <code>&#39;info&#39;</code>。</p><h2 id="customlogger" tabindex="-1">customLogger <a class="header-anchor" href="#customlogger" aria-hidden="true">#</a></h2><ul><li><strong>类型：</strong><div class="language-ts"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#C792EA;">interface</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">Logger</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#F07178;">info</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;font-style:italic;">msg</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">string</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#A6ACCD;font-style:italic;">options</span><span style="color:#89DDFF;">?:</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">LogOptions</span><span style="color:#89DDFF;">):</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">void</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#F07178;">warn</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;font-style:italic;">msg</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">string</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#A6ACCD;font-style:italic;">options</span><span style="color:#89DDFF;">?:</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">LogOptions</span><span style="color:#89DDFF;">):</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">void</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#F07178;">warnOnce</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;font-style:italic;">msg</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">string</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#A6ACCD;font-style:italic;">options</span><span style="color:#89DDFF;">?:</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">LogOptions</span><span style="color:#89DDFF;">):</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">void</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#F07178;">error</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;font-style:italic;">msg</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">string</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#A6ACCD;font-style:italic;">options</span><span style="color:#89DDFF;">?:</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">LogErrorOptions</span><span style="color:#89DDFF;">):</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">void</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#F07178;">clearScreen</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;font-style:italic;">type</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">LogType</span><span style="color:#89DDFF;">):</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">void</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#F07178;">hasErrorLogged</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;font-style:italic;">error</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">Error</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">|</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">RollupError</span><span style="color:#89DDFF;">):</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">boolean</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#F07178;">hasWarned</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">boolean</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span></code></pre></div></li></ul><p>使用自定义 logger 记录消息。可以使用 Vite 的 <code>createLogger</code> API 获取默认的 logger 并对其进行自定义，例如，更改消息或过滤掉某些警告。</p><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;font-style:italic;">import</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">createLogger</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">defineConfig</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">}</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;font-style:italic;">from</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">vite</span><span style="color:#89DDFF;">&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C792EA;">const</span><span style="color:#A6ACCD;"> logger </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">createLogger</span><span style="color:#A6ACCD;">()</span></span>
<span class="line"><span style="color:#C792EA;">const</span><span style="color:#A6ACCD;"> loggerWarn </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> logger</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">warn</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">logger</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">warn</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;font-style:italic;">msg</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#A6ACCD;font-style:italic;">options</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">=&gt;</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#89DDFF;">  </span><span style="color:#676E95;font-style:italic;">// 忽略空 CSS 文件的警告</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#89DDFF;font-style:italic;">if</span><span style="color:#F07178;"> (</span><span style="color:#A6ACCD;">msg</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">includes</span><span style="color:#F07178;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">vite:css</span><span style="color:#89DDFF;">&#39;</span><span style="color:#F07178;">) </span><span style="color:#89DDFF;">&amp;&amp;</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">msg</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">includes</span><span style="color:#F07178;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;"> is empty</span><span style="color:#89DDFF;">&#39;</span><span style="color:#F07178;">)) </span><span style="color:#89DDFF;font-style:italic;">return</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#82AAFF;">loggerWarn</span><span style="color:#F07178;">(</span><span style="color:#A6ACCD;">msg</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">options</span><span style="color:#F07178;">)</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">export</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;font-style:italic;">default</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">defineConfig</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#F07178;">customLogger</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> logger</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#89DDFF;">}</span><span style="color:#A6ACCD;">)</span></span>
<span class="line"></span></code></pre></div><h2 id="clearscreen" tabindex="-1">clearScreen <a class="header-anchor" href="#clearscreen" aria-hidden="true">#</a></h2><ul><li><strong>类型：</strong> <code>boolean</code></li><li><strong>默认：</strong> <code>true</code></li></ul><p>设为 <code>false</code> 可以避免 Vite 清屏而错过在终端中打印某些关键信息。命令行模式下可以通过 <code>--clearScreen false</code> 设置。</p><h2 id="envdir" tabindex="-1">envDir <a class="header-anchor" href="#envdir" aria-hidden="true">#</a></h2><ul><li><strong>类型：</strong> <code>string</code></li><li><strong>默认：</strong> <code>root</code></li></ul><p>用于加载 <code>.env</code> 文件的目录。可以是一个绝对路径，也可以是相对于项目根的路径。</p><p>关于环境文件的更多信息，请参见 <a href="/guide/env-and-mode.html#env-files">这里</a>。</p><h2 id="envprefix" tabindex="-1">envPrefix <a class="header-anchor" href="#envprefix" aria-hidden="true">#</a></h2><ul><li><strong>类型：</strong> <code>string | string[]</code></li><li><strong>默认：</strong> <code>VITE_</code></li></ul><p>以 <code>envPrefix</code> 开头的环境变量会通过 i<wbr>mport.meta.env 暴露在你的客户端源码中。</p><div class="warning custom-block"><p class="custom-block-title">安全注意事项</p><p><code>envPrefix</code> 不应被设置为空字符串 <code>&#39;&#39;</code>，这将暴露你所有的环境变量，导致敏感信息的意外泄漏。 检测到配置为 <code>&#39;&#39;</code> 时 Vite 将会抛出错误.</p><p>如果你想暴露一个不含前缀的变量，可以使用 <a href="#define">define</a> 选项：</p><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#FFCB6B;">define</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">i<wbr>mport.meta.env.ENV_VARIABLE</span><span style="color:#89DDFF;">&#39;</span><span style="color:#F07178;">: </span><span style="color:#A6ACCD;">JSON</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">stringify</span><span style="color:#F07178;">(</span><span style="color:#A6ACCD;">process</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">env</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">ENV_VARIABLE</span><span style="color:#F07178;">)</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span></code></pre></div></div><h2 id="apptype" tabindex="-1">appType <a class="header-anchor" href="#apptype" aria-hidden="true">#</a></h2><ul><li><strong>类型：</strong> <code>&#39;spa&#39; | &#39;mpa&#39; | &#39;custom&#39;</code></li><li><strong>默认：</strong> <code>&#39;spa&#39;</code></li></ul><p>无论你的应用是一个单页应用（SPA）还是一个 <a href="./../guide/build.html#multi-page-app">多页应用（MPA）</a>，亦或是一个定制化应用（SSR 和自定义 HTML 处理的框架）：</p><ul><li><code>&#39;spa&#39;</code>：包含 HTML 中间件以及使用 SPA 回退。在预览中将 <a href="https://github.com/lukeed/sirv" target="_blank" rel="noreferrer">sirv</a> 配置为 <code>single: true</code></li><li><code>&#39;mpa&#39;</code>：包含 HTML 中间件</li><li><code>&#39;custom&#39;</code>：不包含 HTML 中间件</li></ul><p>要了解更多，请查看 Vite 的 <a href="/guide/ssr.html#vite-cli">SSR 指引</a>。相关内容：<a href="./server-options.html#server-middlewaremode"><code>server.middlewareMode</code></a>。</p>`,139),p=[o];function t(r,c,i,d,y,D){return n(),l("div",null,p)}const A=s(e,[["render",t]]);export{C as __pageData,A as default};
