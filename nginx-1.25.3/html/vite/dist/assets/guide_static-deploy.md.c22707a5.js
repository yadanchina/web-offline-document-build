import{_ as s,o as a,c as n,a as l}from"./app.dbaf790a.js";const F=JSON.parse('{"title":"部署静态站点","description":"","frontmatter":{},"headers":[{"level":2,"title":"构建应用","slug":"building-the-app","link":"#building-the-app","children":[{"level":3,"title":"本地测试应用","slug":"testing-the-app-locally","link":"#testing-the-app-locally","children":[]}]},{"level":2,"title":"GitHub Pages","slug":"github-pages","link":"#github-pages","children":[]},{"level":2,"title":"GitLab Pages 配合 GitLab CI","slug":"gitlab-pages-and-gitlab-ci","link":"#gitlab-pages-and-gitlab-ci","children":[]},{"level":2,"title":"Netlify","slug":"netlify","link":"#netlify","children":[{"level":3,"title":"Netlify CLI","slug":"netlify-cli","link":"#netlify-cli","children":[]},{"level":3,"title":"Netlify with Git","slug":"netlify-with-git","link":"#netlify-with-git","children":[]}]},{"level":2,"title":"Vercel","slug":"vercel","link":"#vercel","children":[{"level":3,"title":"Vercel CLI","slug":"vercel-cli","link":"#vercel-cli","children":[]},{"level":3,"title":"Vercel for Git","slug":"vercel-for-git","link":"#vercel-for-git","children":[]}]},{"level":2,"title":"Cloudflare Pages","slug":"cloudflare-pages","link":"#cloudflare-pages","children":[{"level":3,"title":"Cloudflare Pages via Wrangler","slug":"cloudflare-pages-via-wrangler","link":"#cloudflare-pages-via-wrangler","children":[]},{"level":3,"title":"Cloudflare Pages with Git","slug":"cloudflare-pages-with-git","link":"#cloudflare-pages-with-git","children":[]}]},{"level":2,"title":"Google Firebase","slug":"google-firebase","link":"#google-firebase","children":[]},{"level":2,"title":"Surge","slug":"surge","link":"#surge","children":[]},{"level":2,"title":"Azure 的静态网站应用","slug":"azure-static-web-apps","link":"#azure-static-web-apps","children":[]},{"level":2,"title":"Render","slug":"render","link":"#render","children":[]},{"level":2,"title":"Flightcontrol","slug":"flightcontrol","link":"#flightcontrol","children":[]},{"level":2,"title":"AWS Amplify 部署","slug":"aws-amplify-hoisting","link":"#aws-amplify-hoisting","children":[]}],"relativePath":"guide/static-deploy.md"}'),e={name:"guide/static-deploy.md"},p=l(`<h1 id="deploying-a-static-site" tabindex="-1">部署静态站点 <a class="header-anchor" href="#deploying-a-static-site" aria-hidden="true">#</a></h1><p>本指南建立在以下几个假设基础之上：</p><ul><li>你正在使用的是默认的构建输出路径（<code>dist</code>）。这个路径 <a href="/config/build-options.html#build-outdir">可以通过 <code>build.outDir</code> 更改</a>，在这种情况下，你可以从这篇指南中找到所需的指引。</li><li>你正在使用 NPM；或者 Yarn 等其他可以运行下面的脚本指令的包管理工具。</li><li>Vite 已作为一个本地开发依赖（dev dependency）安装在你的项目中，并且你已经配置好了如下的 npm scripts：</li></ul><div class="language-json"><button title="Copy Code" class="copy"></button><span class="lang">json</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C792EA;">scripts</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">&quot;</span><span style="color:#FFCB6B;">build</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">vite build</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">&quot;</span><span style="color:#FFCB6B;">preview</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">vite preview</span><span style="color:#89DDFF;">&quot;</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span></code></pre></div><p>值得注意的是 <code>vite preview</code> 用作预览本地构建，而不应直接作为生产服务器。</p><div class="tip custom-block"><p class="custom-block-title">注意</p><p>本篇指南提供了部署 Vite 静态站点的说明。Vite 也对服务端渲染（SSR）有了实验性的支持。SSR 是指支持在 Node 中运行相应应用的前端框架，预渲染成 HTML，最后在客户端激活（hydrate）。查看 <a href="./ssr.html">SSR 指南</a> 了解更多细节。另一方面，如果你在寻找与传统服务端框架集成的方式，那么请查看 <a href="./backend-integration.html">后端集成</a> 章节。</p></div><h2 id="building-the-app" tabindex="-1">构建应用 <a class="header-anchor" href="#building-the-app" aria-hidden="true">#</a></h2><p>你可以运行 <code>npm run build</code> 命令来执行应用的构建。</p><div class="language-bash"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#FFCB6B;">$</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">npm</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">run</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">build</span></span>
<span class="line"></span></code></pre></div><p>默认情况下，构建会输出到 <code>dist</code> 文件夹中。你可以部署这个 <code>dist</code> 文件夹到任何你喜欢的平台。</p><h3 id="testing-the-app-locally" tabindex="-1">本地测试应用 <a class="header-anchor" href="#testing-the-app-locally" aria-hidden="true">#</a></h3><p>当你构建完成应用后，你可以通过运行 <code>npm run preview</code> 命令，在本地测试该应用。</p><div class="language-bash"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#FFCB6B;">$</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">npm</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">run</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">build</span></span>
<span class="line"><span style="color:#FFCB6B;">$</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">npm</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">run</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">preview</span></span>
<span class="line"></span></code></pre></div><p><code>vite preview</code> 命令会在本地启动一个静态 Web 服务器，将 <code>dist</code> 文件夹运行在 <code>http://localhost:4173</code>。这样在本地环境下查看该构建产物是否正常可用就方便多了。</p><p>你可以通过 <code>--port</code> 参数来配置服务的运行端口。</p><div class="language-json"><button title="Copy Code" class="copy"></button><span class="lang">json</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C792EA;">scripts</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">&quot;</span><span style="color:#FFCB6B;">preview</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">vite preview --port 8080</span><span style="color:#89DDFF;">&quot;</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span></code></pre></div><p>现在 <code>preview</code> 命令会将服务器运行在 <code>http://localhost:8080</code>。</p><h2 id="github-pages" tabindex="-1">GitHub Pages <a class="header-anchor" href="#github-pages" aria-hidden="true">#</a></h2><ol><li><p>在 <code>vite.config.js</code> 中设置正确的 <code>base</code>。</p><p>如果你要部署在 <code>https://&lt;USERNAME&gt;.github.io/</code> 上，你可以省略 <code>base</code> 使其默认为 <code>&#39;/&#39;</code>。</p><p>如果你要部署在 <code>https://&lt;USERNAME&gt;.github.io/&lt;REPO&gt;/</code> 上，例如你的仓库地址为 <code>https://github.com/&lt;USERNAME&gt;/&lt;REPO&gt;</code>，那么请设置 <code>base</code> 为 <code>&#39;/&lt;REPO&gt;/&#39;</code>。</p></li><li><p>进入仓库 settings 页面的 GitHub Pages 配置，选择部署来源为“GitHub Actions”，这将引导你创建一个构建和部署项目的工作流程，我们提供了一个安装依赖项和使用 npm 构建的工作流程样本：</p><div class="language-yml"><button title="Copy Code" class="copy"></button><span class="lang">yml</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#676E95;font-style:italic;"># 将静态内容部署到 GitHub Pages 的简易工作流程</span></span>
<span class="line"><span style="color:#F07178;">name</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">Deploy static content to Pages</span></span>
<span class="line"></span>
<span class="line"><span style="color:#FF9CAC;">on</span><span style="color:#89DDFF;">:</span></span>
<span class="line"><span style="color:#89DDFF;">  </span><span style="color:#676E95;font-style:italic;"># 仅在推送到默认分支时运行。</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#F07178;">push</span><span style="color:#89DDFF;">:</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#F07178;">branches</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">[</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">main</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">]</span></span>
<span class="line"></span>
<span class="line"><span style="color:#89DDFF;">  </span><span style="color:#676E95;font-style:italic;"># 这个选项可以使你手动在 Action tab 页面触发工作流</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#F07178;">workflow_dispatch</span><span style="color:#89DDFF;">:</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;"># 设置 GITHUB_TOKEN 的权限，以允许部署到 GitHub Pages。</span></span>
<span class="line"><span style="color:#F07178;">permissions</span><span style="color:#89DDFF;">:</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#F07178;">contents</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">read</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#F07178;">pages</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">write</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#F07178;">id-token</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">write</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;"># 允许一个并发的部署</span></span>
<span class="line"><span style="color:#F07178;">concurrency</span><span style="color:#89DDFF;">:</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#F07178;">group</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">pages</span><span style="color:#89DDFF;">&#39;</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#F07178;">cancel-in-progress</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#FF9CAC;">true</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F07178;">jobs</span><span style="color:#89DDFF;">:</span></span>
<span class="line"><span style="color:#89DDFF;">  </span><span style="color:#676E95;font-style:italic;"># 单次部署的工作描述</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#F07178;">deploy</span><span style="color:#89DDFF;">:</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#F07178;">environment</span><span style="color:#89DDFF;">:</span></span>
<span class="line"><span style="color:#A6ACCD;">      </span><span style="color:#F07178;">name</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">github-pages</span></span>
<span class="line"><span style="color:#A6ACCD;">      </span><span style="color:#F07178;">url</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">\${{ steps.deployment.outputs.page_url }}</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#F07178;">runs-on</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">ubuntu-latest</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#F07178;">steps</span><span style="color:#89DDFF;">:</span></span>
<span class="line"><span style="color:#A6ACCD;">      </span><span style="color:#89DDFF;">-</span><span style="color:#A6ACCD;"> </span><span style="color:#F07178;">name</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">Checkout</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#F07178;">uses</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">actions/checkout@v3</span></span>
<span class="line"><span style="color:#A6ACCD;">      </span><span style="color:#89DDFF;">-</span><span style="color:#A6ACCD;"> </span><span style="color:#F07178;">name</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">Set up Node</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#F07178;">uses</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">actions/setup-node@v3</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#F07178;">with</span><span style="color:#89DDFF;">:</span></span>
<span class="line"><span style="color:#A6ACCD;">          </span><span style="color:#F07178;">node-version</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">18</span></span>
<span class="line"><span style="color:#A6ACCD;">          </span><span style="color:#F07178;">cache</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">npm</span><span style="color:#89DDFF;">&#39;</span></span>
<span class="line"><span style="color:#A6ACCD;">      </span><span style="color:#89DDFF;">-</span><span style="color:#A6ACCD;"> </span><span style="color:#F07178;">name</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">Install dependencies</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#F07178;">run</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">npm install</span></span>
<span class="line"><span style="color:#A6ACCD;">      </span><span style="color:#89DDFF;">-</span><span style="color:#A6ACCD;"> </span><span style="color:#F07178;">name</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">Build</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#F07178;">run</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">npm run build</span></span>
<span class="line"><span style="color:#A6ACCD;">      </span><span style="color:#89DDFF;">-</span><span style="color:#A6ACCD;"> </span><span style="color:#F07178;">name</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">Setup Pages</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#F07178;">uses</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">actions/configure-pages@v3</span></span>
<span class="line"><span style="color:#A6ACCD;">      </span><span style="color:#89DDFF;">-</span><span style="color:#A6ACCD;"> </span><span style="color:#F07178;">name</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">Upload artifact</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#F07178;">uses</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">actions/upload-pages-artifact@v1</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#F07178;">with</span><span style="color:#89DDFF;">:</span></span>
<span class="line"><span style="color:#89DDFF;">          </span><span style="color:#676E95;font-style:italic;"># Upload dist repository</span></span>
<span class="line"><span style="color:#A6ACCD;">          </span><span style="color:#F07178;">path</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">./dist</span><span style="color:#89DDFF;">&#39;</span></span>
<span class="line"><span style="color:#A6ACCD;">      </span><span style="color:#89DDFF;">-</span><span style="color:#A6ACCD;"> </span><span style="color:#F07178;">name</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">Deploy to GitHub Pages</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#F07178;">id</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">deployment</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#F07178;">uses</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">actions/deploy-pages@v1</span></span>
<span class="line"></span></code></pre></div></li></ol><h2 id="gitlab-pages-and-gitlab-ci" tabindex="-1">GitLab Pages 配合 GitLab CI <a class="header-anchor" href="#gitlab-pages-and-gitlab-ci" aria-hidden="true">#</a></h2><ol><li><p>在 <code>vite.config.js</code> 中设置正确的 <code>base</code>。</p><p>如果你要部署在 <code>https://&lt;USERNAME or GROUP&gt;.gitlab.io/</code> 上，你可以省略 <code>base</code> 使其默认为 <code>&#39;/&#39;</code>。</p><p>如果你要部署在 <code>https://&lt;USERNAME or GROUP&gt;.gitlab.io/&lt;REPO&gt;/</code> 上，例如你的仓库地址为 <code>https://gitlab.com/&lt;USERNAME&gt;/&lt;REPO&gt;</code>，那么请设置 <code>base</code> 为 <code>&#39;/&lt;REPO&gt;/&#39;</code>。</p></li><li><p>在项目根目录创建一个 <code>.gitlab-ci.yml</code> 文件，并包含以下内容。它将使得每次你更改内容时都重新构建与部署站点：</p><div class="language-yaml"><button title="Copy Code" class="copy"></button><span class="lang">yaml</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#F07178;">image</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">node:16.5.0</span></span>
<span class="line"><span style="color:#F07178;">pages</span><span style="color:#89DDFF;">:</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#F07178;">stage</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">deploy</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#F07178;">cache</span><span style="color:#89DDFF;">:</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#F07178;">key</span><span style="color:#89DDFF;">:</span></span>
<span class="line"><span style="color:#A6ACCD;">      </span><span style="color:#F07178;">files</span><span style="color:#89DDFF;">:</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#89DDFF;">-</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">package-lock.json</span></span>
<span class="line"><span style="color:#A6ACCD;">      </span><span style="color:#F07178;">prefix</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">npm</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#F07178;">paths</span><span style="color:#89DDFF;">:</span></span>
<span class="line"><span style="color:#A6ACCD;">      </span><span style="color:#89DDFF;">-</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">node_modules/</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#F07178;">script</span><span style="color:#89DDFF;">:</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">-</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">npm install</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">-</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">npm run build</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">-</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">cp -a dist/. public/</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#F07178;">artifacts</span><span style="color:#89DDFF;">:</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#F07178;">paths</span><span style="color:#89DDFF;">:</span></span>
<span class="line"><span style="color:#A6ACCD;">      </span><span style="color:#89DDFF;">-</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">public</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#F07178;">rules</span><span style="color:#89DDFF;">:</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">-</span><span style="color:#A6ACCD;"> </span><span style="color:#F07178;">if</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">$CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH</span></span>
<span class="line"></span></code></pre></div></li></ol><h2 id="netlify" tabindex="-1">Netlify <a class="header-anchor" href="#netlify" aria-hidden="true">#</a></h2><h3 id="netlify-cli" tabindex="-1">Netlify CLI <a class="header-anchor" href="#netlify-cli" aria-hidden="true">#</a></h3><ol><li>安装 <a href="https://cli.netlify.com/" target="_blank" rel="noreferrer">Netlify CLI</a>。</li><li>使用 <code>ntl init</code> 创建一个新站点。</li><li>使用 <code>ntl deploy</code> 来部署。</li></ol><div class="language-bash"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#676E95;font-style:italic;"># 安装 Netlify CLI</span></span>
<span class="line"><span style="color:#FFCB6B;">$</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">npm</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">install</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">-g</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">netlify-cli</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;"># 在 Netlify 中创建一个新站点</span></span>
<span class="line"><span style="color:#FFCB6B;">$</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">ntl</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">init</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;"># 部署一个独一无二的预览 URL</span></span>
<span class="line"><span style="color:#FFCB6B;">$</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">ntl</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">deploy</span></span>
<span class="line"></span></code></pre></div><p>Netlify CLI 会给你分享一个预览的 URL 来检查部署结果。当你准备好了发布生产版本时，请使用 <code>prod</code> 标志：</p><div class="language-bash"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#676E95;font-style:italic;"># 部署站点到生产环境</span></span>
<span class="line"><span style="color:#FFCB6B;">$</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">ntl</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">deploy</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">--prod</span></span>
<span class="line"></span></code></pre></div><h3 id="netlify-with-git" tabindex="-1">Netlify with Git <a class="header-anchor" href="#netlify-with-git" aria-hidden="true">#</a></h3><ol><li>将你的代码推送到 git 仓库（GitHub、GitLab、BitBucket 或是 Azure DevOps 等服务）</li><li>在 Netlify 中 <a href="https://app.netlify.com/start" target="_blank" rel="noreferrer">导入该项目</a></li><li>选择分支，输出目录，如果需要还可以设置环境变量。</li><li>点击 <strong>部署</strong></li><li>你的 Vite 应用就部署完成了！</li></ol><p>在你的项目被导入和部署后，所有对生产分支以外的其他分支（可能来自合并请求）的后续推送都会生成 <a href="https://docs.netlify.com/site-deploys/deploy-previews/" target="_blank" rel="noreferrer">预览部署</a>，所有对生产分支（通常是 “main”）都会生成一个 <a href="https://docs.netlify.com/site-deploys/overview/#definitions" target="_blank" rel="noreferrer">生产部署</a>。</p><h2 id="vercel" tabindex="-1">Vercel <a class="header-anchor" href="#vercel" aria-hidden="true">#</a></h2><h3 id="vercel-cli" tabindex="-1">Vercel CLI <a class="header-anchor" href="#vercel-cli" aria-hidden="true">#</a></h3><ol><li>安装 <a href="https://vercel.com/cli" target="_blank" rel="noreferrer">Vercel CLI</a> 并运行 <code>vercel</code> 来部署。</li><li>Vercel 会检测到你正在使用 Vite，并会为你开启相应的正确配置。</li><li>你的应用被部署好了！（示例：<a href="https://vite-vue-template.vercel.app/" target="_blank" rel="noreferrer">vite-vue-template.vercel.app</a>）</li></ol><div class="language-bash"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#FFCB6B;">$</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">npm</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">i</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">-g</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">vercel</span></span>
<span class="line"><span style="color:#FFCB6B;">$</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">vercel</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">init</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">vite</span></span>
<span class="line"><span style="color:#FFCB6B;">Vercel</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">CLI</span></span>
<span class="line"><span style="color:#89DDFF;">&gt;</span><span style="color:#A6ACCD;"> Success</span><span style="color:#89DDFF;">!</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">Initialized</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">vite</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">example</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">in</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">~/your-folder.</span></span>
<span class="line"><span style="color:#FFCB6B;">-</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">To</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">deploy,</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">\`</span><span style="color:#82AAFF;">cd</span><span style="color:#C3E88D;"> vite</span><span style="color:#89DDFF;">\`</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">and</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">run</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">\`</span><span style="color:#FFCB6B;">vercel</span><span style="color:#89DDFF;">\`</span><span style="color:#82AAFF;">.</span></span>
<span class="line"></span></code></pre></div><h3 id="vercel-for-git" tabindex="-1">Vercel for Git <a class="header-anchor" href="#vercel-for-git" aria-hidden="true">#</a></h3><ol><li>将你的代码推送到远程仓库（GitHub, GitLab, Bitbucket）</li><li><a href="https://vercel.com/new" target="_blank" rel="noreferrer">导入你的 Vite 仓库</a> 到 Vercel</li><li>Vercel 会检测到你正在使用 Vite，并会为你的部署开启相应的正确配置。</li><li>你的应用被部署好了！（示例：<a href="https://vite-vue-template.vercel.app/" target="_blank" rel="noreferrer">vite-vue-template.vercel.app</a>）</li></ol><p>在你的项目被导入和部署后，所有对分支的后续推送都会生成 <a href="https://vercel.com/docs/concepts/deployments/environments#preview" target="_blank" rel="noreferrer">预览部署</a>，而所有对生产分支（通常是“main”）的更改都会生成一个 <a href="https://vercel.com/docs/concepts/deployments/environments#production" target="_blank" rel="noreferrer">生产构建</a></p><p>查看 Vercel 的 <a href="https://vercel.com/docs/concepts/git" target="_blank" rel="noreferrer">Git 集成</a> 了解更多细节。</p><h2 id="cloudflare-pages" tabindex="-1">Cloudflare Pages <a class="header-anchor" href="#cloudflare-pages" aria-hidden="true">#</a></h2><h3 id="cloudflare-pages-via-wrangler" tabindex="-1">Cloudflare Pages via Wrangler <a class="header-anchor" href="#cloudflare-pages-via-wrangler" aria-hidden="true">#</a></h3><ol><li>安装 <a href="https://developers.cloudflare.com/workers/wrangler/get-started/" target="_blank" rel="noreferrer">Wrangler CLI</a>.</li><li>使用 <code>wrangler login</code>、通过你的 Cloudflare 账号完成 Wrangler 身份校验。</li><li>运行你的构建命令</li><li>使用 <code>npx wrangler pages publish dist</code> 部署。</li></ol><div class="language-bash"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#676E95;font-style:italic;"># 安装 Wrangler CLI</span></span>
<span class="line"><span style="color:#FFCB6B;">$</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">npm</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">install</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">-g</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">wrangler</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;"># 使用 CLI 工具登录 Cloudflare 账号</span></span>
<span class="line"><span style="color:#FFCB6B;">$</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">wrangler</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">login</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;"># 运行构建命令</span></span>
<span class="line"><span style="color:#FFCB6B;">$</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">npm</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">run</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">build</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;"># 创建一个新的部署</span></span>
<span class="line"><span style="color:#FFCB6B;">$</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">npx</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">wrangler</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">pages</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">publish</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">dist</span></span>
<span class="line"></span></code></pre></div><p>在你的资产上传后，Wrangler 会给你一个预览 URL 来检查你的网站。当你登录到 Cloudflare Pages 仪表板时，你会看到你的新项目。</p><h3 id="cloudflare-pages-with-git" tabindex="-1">Cloudflare Pages with Git <a class="header-anchor" href="#cloudflare-pages-with-git" aria-hidden="true">#</a></h3><ol><li>将你的代码推送到你的 Git 仓库（GitHub, GitLab）</li><li>登录 Cloudflare 控制台，在 <strong>Account Home</strong> &gt; <strong>Pages</strong> 下选择你的账号</li><li>选择 <strong>Create a new Project</strong> 以及 <strong>Connect Git</strong> 选项</li><li>选择你想要部署的 Git 项目，然后点击 <strong>Begin setup</strong></li><li>根据你所选择的 Vite 框架，在构建设置中选择相应的框架预设</li><li>记得保存！然后部署吧！</li><li>然后你的应用就部署完成了！（例如： <code>https://&lt;PROJECTNAME&gt;.pages.dev/</code>）</li></ol><p>在你的项目被导入和部署后，所有对该分支的后续推送都会生成一个 <a href="https://developers.cloudflare.com/pages/platform/preview-deployments/" target="_blank" rel="noreferrer">预览部署</a>，除非你特意在 <a href="https://developers.cloudflare.com/pages/platform/branch-build-controls/" target="_blank" rel="noreferrer">控制分支构建</a> 的选项中写明不触发。所有对 <strong>生产分支</strong>（通常是 &quot;main&quot;）的更改都会生成一个 <strong>生产构建</strong>。</p><p>你也可以添加自定义域名，并自定义各个页面的构建设置。查看 <a href="https://developers.cloudflare.com/pages/get-started/#manage-your-site" target="_blank" rel="noreferrer">Cloudflare 页面与 Git 集成</a> 了解更多详情。</p><h2 id="google-firebase" tabindex="-1">Google Firebase <a class="header-anchor" href="#google-firebase" aria-hidden="true">#</a></h2><ol><li><p>确保已经安装 <a href="https://www.npmjs.com/package/firebase-tools" target="_blank" rel="noreferrer">firebase-tools</a>。</p></li><li><p>在项目根目录创建 <code>firebase.json</code> 和 <code>.firebaserc</code> 两个文件，包含以下内容：</p><p><code>firebase.json</code>:</p><div class="language-json"><button title="Copy Code" class="copy"></button><span class="lang">json</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C792EA;">hosting</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">&quot;</span><span style="color:#FFCB6B;">public</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">dist</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">&quot;</span><span style="color:#FFCB6B;">ignore</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">[],</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">&quot;</span><span style="color:#FFCB6B;">rewrites</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">[</span></span>
<span class="line"><span style="color:#A6ACCD;">      </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#89DDFF;">&quot;</span><span style="color:#F78C6C;">source</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">**</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#89DDFF;">&quot;</span><span style="color:#F78C6C;">destination</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">/index.html</span><span style="color:#89DDFF;">&quot;</span></span>
<span class="line"><span style="color:#A6ACCD;">      </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">]</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span></code></pre></div><p><code>.firebaserc</code>:</p><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">projects</span><span style="color:#89DDFF;">&quot;</span><span style="color:#F07178;">: </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#89DDFF;">&quot;</span><span style="color:#F07178;">default</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">&lt;YOUR_FIREBASE_ID&gt;</span><span style="color:#89DDFF;">&quot;</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span></code></pre></div></li><li><p>运行 <code>npm run build</code> 后，通过 <code>firebase deploy</code> 命令部署。</p></li></ol><h2 id="surge" tabindex="-1">Surge <a class="header-anchor" href="#surge" aria-hidden="true">#</a></h2><ol><li><p>首先确保已经安装 <a href="https://www.npmjs.com/package/surge" target="_blank" rel="noreferrer">surge</a>。</p></li><li><p>运行 <code>npm run build</code>。</p></li><li><p>运行 <code>surge dist</code> 命令部署到 surge。</p></li></ol><p>你也可以通过添加 <code>surge dist yourdomain.com</code> 部署到一个 <a href="http://surge.sh/help/adding-a-custom-domain" target="_blank" rel="noreferrer">自定义域名</a>。</p><h2 id="azure-static-web-apps" tabindex="-1">Azure 的静态网站应用 <a class="header-anchor" href="#azure-static-web-apps" aria-hidden="true">#</a></h2><p>你可以通过微软 Azure 的 <a href="https://aka.ms/staticwebapps" target="_blank" rel="noreferrer">静态网站应用</a> 服务来快速部署你的 Vite 应用。你只需：</p><ul><li>注册 Azure 账号并获取一个订阅（subscription）的 key。可以在 <a href="https://azure.microsoft.com/free" target="_blank" rel="noreferrer">此处快速完成注册</a>。</li><li>将你的应用代码托管到 <a href="https://github.com" target="_blank" rel="noreferrer">GitHub</a>。</li><li>在 <a href="https://code.visualstudio.com" target="_blank" rel="noreferrer">VSCode</a> 中安装 <a href="https://marketplace.visualstudio.com/items?itemName=ms-azuretools.vscode-azurestaticwebapps" target="_blank" rel="noreferrer">SWA 扩展</a>。</li></ul><p>安装完此扩展后，进入你应用的根目录。打开 SWA 的扩展程序，登录 Azure，并点击 &#39;+&#39;，来创建一个全新的 SWA。系统会提示你指定所需的订阅 key。</p><p>按照扩展程序的启动向导，给你的应用程序起个名字，选择框架预设，并指定应用程序的根目录（通常为 <code>/</code>）以及构建文件的路径 <code>/dist</code>。此向导完成后，会在你的 repo 中的 <code>.github</code> 文件夹中创建一个 GitHub Action。</p><p>这个 action 致力于部署你的应用程序（可以在仓库的 Actions 标签中，查看相关进度），成功完成后，你可以点击 GitHub 中出现的 “浏览站点” 的按钮，查看你的应用程序。</p><h2 id="render" tabindex="-1">Render <a class="header-anchor" href="#render" aria-hidden="true">#</a></h2><p>你可以在 <a href="https://render.com/" target="_blank" rel="noreferrer">Render</a> 部署你的 Vite 应用。</p><ol><li><p>创建一个 <a href="https://dashboard.render.com/register" target="_blank" rel="noreferrer">Render 账号</a></p></li><li><p>在 <a href="https://dashboard.render.com/" target="_blank" rel="noreferrer">控制台</a> 页面点击 <strong>New</strong> 按钮并选择 <strong>Static Site</strong>。</p></li><li><p>链接你的 GitHub/GitLab 账号或使用一个公共仓库</p></li><li><p>指定一个项目名称和所用分支</p><ul><li><strong>构建命令</strong>：<code>npm run build</code></li><li><strong>发布目录</strong>：<code>dist</code></li></ul></li><li><p>点击 <strong>Create Static Site</strong></p><p>你的应用将会被部署在 <code>https://&lt;PROJECTNAME&gt;.onrender.com/</code>。</p></li></ol><p>默认情况下，推送到该指定分支的任何新的 commit 都会自动触发一个新的部署。<a href="https://render.com/docs/deploys#toggling-auto-deploy-for-a-service" target="_blank" rel="noreferrer">Auto-Deploy</a> 可以在项目设置中部署。</p><p>还可以为项目添加一个 <a href="https://render.com/docs/custom-domains" target="_blank" rel="noreferrer">自定义域名</a>。</p><h2 id="flightcontrol" tabindex="-1">Flightcontrol <a class="header-anchor" href="#flightcontrol" aria-hidden="true">#</a></h2><p>使用 <a href="https://www.flightcontrol.dev/?ref=docs-vite" target="_blank" rel="noreferrer">Flightcontrol</a> 部署静态站点，可以按照 <a href="https://www.flightcontrol.dev/docs/reference/examples/vite?ref=docs-vite" target="_blank" rel="noreferrer">说明</a> 进行操作。</p><h2 id="aws-amplify-hoisting" tabindex="-1">AWS Amplify 部署 <a class="header-anchor" href="#aws-amplify-hoisting" aria-hidden="true">#</a></h2><p>使用 <a href="https://aws.amazon.com/amplify/hosting/" target="_blank" rel="noreferrer">AWS Amplify 部署</a> 部署静态站点，可以按照 <a href="https://docs.amplify.aws/guides/hosting/vite/q/platform/js/" target="_blank" rel="noreferrer">说明</a> 进行操作。</p>`,67),o=[p];function t(r,c,i,y,D,C){return a(),n("div",null,o)}const A=s(e,[["render",t]]);export{F as __pageData,A as default};
