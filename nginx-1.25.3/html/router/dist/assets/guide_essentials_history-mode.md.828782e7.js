import{_ as n,v as o,b as l,t as e,F as s,L as p,R as t,M as r}from"./chunks/framework.dd59a003.js";const g=JSON.parse('{"title":"Different History modes","description":"","frontmatter":{},"headers":[],"relativePath":"guide/essentials/history-mode.md","filePath":"guide/essentials/history-mode.md"}'),c={name:"guide/essentials/history-mode.md"},y=s("h1",{id:"Different-History-modes",tabindex:"-1"},[p("Different History modes "),s("a",{class:"header-anchor",href:"#Different-History-modes","aria-label":'Permalink to "Different History modes"'},"​")],-1),i=t(`<p>The <code>history</code> option when creating the router instance allows us to choose among different history modes.</p><h2 id="Hash-Mode" tabindex="-1">Hash Mode <a class="header-anchor" href="#Hash-Mode" aria-label="Permalink to &quot;Hash Mode&quot;">​</a></h2><p>The hash history mode is created with <code>createWebHashHistory()</code>:</p><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki one-dark-pro vp-code-dark"><code><span class="line"><span style="color:#C678DD;">import</span><span style="color:#ABB2BF;"> { </span><span style="color:#E06C75;">createRouter</span><span style="color:#ABB2BF;">, </span><span style="color:#E06C75;">createWebHashHistory</span><span style="color:#ABB2BF;"> } </span><span style="color:#C678DD;">from</span><span style="color:#ABB2BF;"> </span><span style="color:#98C379;">&#39;vue-router&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C678DD;">const</span><span style="color:#ABB2BF;"> </span><span style="color:#E5C07B;">router</span><span style="color:#ABB2BF;"> </span><span style="color:#56B6C2;">=</span><span style="color:#ABB2BF;"> </span><span style="color:#61AFEF;">createRouter</span><span style="color:#ABB2BF;">({</span></span>
<span class="line"><span style="color:#ABB2BF;">  </span><span style="color:#E06C75;">history</span><span style="color:#ABB2BF;">: </span><span style="color:#61AFEF;">createWebHashHistory</span><span style="color:#ABB2BF;">(),</span></span>
<span class="line"><span style="color:#ABB2BF;">  </span><span style="color:#E06C75;">routes</span><span style="color:#ABB2BF;">: [</span></span>
<span class="line"><span style="color:#ABB2BF;">    </span><span style="color:#7F848E;font-style:italic;">//...</span></span>
<span class="line"><span style="color:#ABB2BF;">  ],</span></span>
<span class="line"><span style="color:#ABB2BF;">})</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">import</span><span style="color:#24292E;"> { createRouter, createWebHashHistory } </span><span style="color:#D73A49;">from</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&#39;vue-router&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">router</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">createRouter</span><span style="color:#24292E;">({</span></span>
<span class="line"><span style="color:#24292E;">  history: </span><span style="color:#6F42C1;">createWebHashHistory</span><span style="color:#24292E;">(),</span></span>
<span class="line"><span style="color:#24292E;">  routes: [</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6A737D;">//...</span></span>
<span class="line"><span style="color:#24292E;">  ],</span></span>
<span class="line"><span style="color:#24292E;">})</span></span></code></pre></div><p>It uses a hash character (<code>#</code>) before the actual URL that is internally passed. Because this section of the URL is never sent to the server, it doesn&#39;t require any special treatment on the server level. <strong>It does however have a bad impact in SEO</strong>. If that&#39;s a concern for you, use the HTML5 history mode.</p><h2 id="HTML5-Mode" tabindex="-1">HTML5 Mode <a class="header-anchor" href="#HTML5-Mode" aria-label="Permalink to &quot;HTML5 Mode&quot;">​</a></h2><p>The HTML5 mode is created with <code>createWebHistory()</code> and is the recommended mode:</p><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki one-dark-pro vp-code-dark"><code><span class="line"><span style="color:#C678DD;">import</span><span style="color:#ABB2BF;"> { </span><span style="color:#E06C75;">createRouter</span><span style="color:#ABB2BF;">, </span><span style="color:#E06C75;">createWebHistory</span><span style="color:#ABB2BF;"> } </span><span style="color:#C678DD;">from</span><span style="color:#ABB2BF;"> </span><span style="color:#98C379;">&#39;vue-router&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C678DD;">const</span><span style="color:#ABB2BF;"> </span><span style="color:#E5C07B;">router</span><span style="color:#ABB2BF;"> </span><span style="color:#56B6C2;">=</span><span style="color:#ABB2BF;"> </span><span style="color:#61AFEF;">createRouter</span><span style="color:#ABB2BF;">({</span></span>
<span class="line"><span style="color:#ABB2BF;">  </span><span style="color:#E06C75;">history</span><span style="color:#ABB2BF;">: </span><span style="color:#61AFEF;">createWebHistory</span><span style="color:#ABB2BF;">(),</span></span>
<span class="line"><span style="color:#ABB2BF;">  </span><span style="color:#E06C75;">routes</span><span style="color:#ABB2BF;">: [</span></span>
<span class="line"><span style="color:#ABB2BF;">    </span><span style="color:#7F848E;font-style:italic;">//...</span></span>
<span class="line"><span style="color:#ABB2BF;">  ],</span></span>
<span class="line"><span style="color:#ABB2BF;">})</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">import</span><span style="color:#24292E;"> { createRouter, createWebHistory } </span><span style="color:#D73A49;">from</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&#39;vue-router&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">router</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">createRouter</span><span style="color:#24292E;">({</span></span>
<span class="line"><span style="color:#24292E;">  history: </span><span style="color:#6F42C1;">createWebHistory</span><span style="color:#24292E;">(),</span></span>
<span class="line"><span style="color:#24292E;">  routes: [</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6A737D;">//...</span></span>
<span class="line"><span style="color:#24292E;">  ],</span></span>
<span class="line"><span style="color:#24292E;">})</span></span></code></pre></div><p>When using <code>createWebHistory()</code>, the URL will look &quot;normal,&quot; e.g. <code>https://example.com/user/id</code>. Beautiful!</p><p>Here comes a problem, though: Since our app is a single page client side app, without a proper server configuration, the users will get a 404 error if they access <code>https://example.com/user/id</code> directly in their browser. Now that&#39;s ugly.</p><p>Not to worry: To fix the issue, all you need to do is add a simple catch-all fallback route to your server. If the URL doesn&#39;t match any static assets, it should serve the same <code>index.html</code> page that your app lives in. Beautiful, again!</p><h2 id="Memory-mode" tabindex="-1">Memory mode <a class="header-anchor" href="#Memory-mode" aria-label="Permalink to &quot;Memory mode&quot;">​</a></h2><p>The memory history mode doesn&#39;t assume a browser environment and therefore doesn&#39;t interact with the URL <strong>nor automatically triggers the initial navigation</strong>. This makes it perfect for Node environment and SSR. It is created with <code>createMemoryHistory()</code> and <strong>requires you to push the initial navigation</strong> after calling <code>app.use(router)</code>.</p><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki one-dark-pro vp-code-dark"><code><span class="line"><span style="color:#C678DD;">import</span><span style="color:#ABB2BF;"> { </span><span style="color:#E06C75;">createRouter</span><span style="color:#ABB2BF;">, </span><span style="color:#E06C75;">createMemoryHistory</span><span style="color:#ABB2BF;"> } </span><span style="color:#C678DD;">from</span><span style="color:#ABB2BF;"> </span><span style="color:#98C379;">&#39;vue-router&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C678DD;">const</span><span style="color:#ABB2BF;"> </span><span style="color:#E5C07B;">router</span><span style="color:#ABB2BF;"> </span><span style="color:#56B6C2;">=</span><span style="color:#ABB2BF;"> </span><span style="color:#61AFEF;">createRouter</span><span style="color:#ABB2BF;">({</span></span>
<span class="line"><span style="color:#ABB2BF;">  </span><span style="color:#E06C75;">history</span><span style="color:#ABB2BF;">: </span><span style="color:#61AFEF;">createMemoryHistory</span><span style="color:#ABB2BF;">(),</span></span>
<span class="line"><span style="color:#ABB2BF;">  </span><span style="color:#E06C75;">routes</span><span style="color:#ABB2BF;">: [</span></span>
<span class="line"><span style="color:#ABB2BF;">    </span><span style="color:#7F848E;font-style:italic;">//...</span></span>
<span class="line"><span style="color:#ABB2BF;">  ],</span></span>
<span class="line"><span style="color:#ABB2BF;">})</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">import</span><span style="color:#24292E;"> { createRouter, createMemoryHistory } </span><span style="color:#D73A49;">from</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&#39;vue-router&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">router</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">createRouter</span><span style="color:#24292E;">({</span></span>
<span class="line"><span style="color:#24292E;">  history: </span><span style="color:#6F42C1;">createMemoryHistory</span><span style="color:#24292E;">(),</span></span>
<span class="line"><span style="color:#24292E;">  routes: [</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6A737D;">//...</span></span>
<span class="line"><span style="color:#24292E;">  ],</span></span>
<span class="line"><span style="color:#24292E;">})</span></span></code></pre></div><p>While it&#39;s not recommended, you can use this mode inside Browser applications but note <strong>there will be no history</strong>, meaning you won&#39;t be able to go <em>back</em> or <em>forward</em>.</p><h2 id="Example-Server-Configurations" tabindex="-1">Example Server Configurations <a class="header-anchor" href="#Example-Server-Configurations" aria-label="Permalink to &quot;Example Server Configurations&quot;">​</a></h2><p><strong>Note</strong>: The following examples assume you are serving your app from the root folder. If you deploy to a subfolder, you should use <a href="https://cli.vuejs.org/config/#publicpath" target="_blank" rel="noreferrer">the <code>publicPath</code> option of Vue CLI</a> and the related <a href="./../../api/#Functions-createWebHistory"><code>base</code> property of the router</a>. You also need to adjust the examples below to use the subfolder instead of the root folder (e.g. replacing <code>RewriteBase /</code> with <code>RewriteBase /name-of-your-subfolder/</code>).</p><h3 id="Apache" tabindex="-1">Apache <a class="header-anchor" href="#Apache" aria-label="Permalink to &quot;Apache&quot;">​</a></h3><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki one-dark-pro vp-code-dark"><code><span class="line"><span style="color:#abb2bf;">&lt;IfModule mod_negotiation.c&gt;</span></span>
<span class="line"><span style="color:#abb2bf;">  Options -MultiViews</span></span>
<span class="line"><span style="color:#abb2bf;">&lt;/IfModule&gt;</span></span>
<span class="line"><span style="color:#abb2bf;"></span></span>
<span class="line"><span style="color:#abb2bf;">&lt;IfModule mod_rewrite.c&gt;</span></span>
<span class="line"><span style="color:#abb2bf;">  RewriteEngine On</span></span>
<span class="line"><span style="color:#abb2bf;">  RewriteBase /</span></span>
<span class="line"><span style="color:#abb2bf;">  RewriteRule ^index\\.html$ - [L]</span></span>
<span class="line"><span style="color:#abb2bf;">  RewriteCond %{REQUEST_FILENAME} !-f</span></span>
<span class="line"><span style="color:#abb2bf;">  RewriteCond %{REQUEST_FILENAME} !-d</span></span>
<span class="line"><span style="color:#abb2bf;">  RewriteRule . /index.html [L]</span></span>
<span class="line"><span style="color:#abb2bf;">&lt;/IfModule&gt;</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292e;">&lt;IfModule mod_negotiation.c&gt;</span></span>
<span class="line"><span style="color:#24292e;">  Options -MultiViews</span></span>
<span class="line"><span style="color:#24292e;">&lt;/IfModule&gt;</span></span>
<span class="line"><span style="color:#24292e;"></span></span>
<span class="line"><span style="color:#24292e;">&lt;IfModule mod_rewrite.c&gt;</span></span>
<span class="line"><span style="color:#24292e;">  RewriteEngine On</span></span>
<span class="line"><span style="color:#24292e;">  RewriteBase /</span></span>
<span class="line"><span style="color:#24292e;">  RewriteRule ^index\\.html$ - [L]</span></span>
<span class="line"><span style="color:#24292e;">  RewriteCond %{REQUEST_FILENAME} !-f</span></span>
<span class="line"><span style="color:#24292e;">  RewriteCond %{REQUEST_FILENAME} !-d</span></span>
<span class="line"><span style="color:#24292e;">  RewriteRule . /index.html [L]</span></span>
<span class="line"><span style="color:#24292e;">&lt;/IfModule&gt;</span></span></code></pre></div><p>Instead of <code>mod_rewrite</code>, you could also use <a href="https://httpd.apache.org/docs/2.4/mod/mod_dir.html#fallbackresource" target="_blank" rel="noreferrer"><code>FallbackResource</code></a>.</p><h3 id="nginx" tabindex="-1">nginx <a class="header-anchor" href="#nginx" aria-label="Permalink to &quot;nginx&quot;">​</a></h3><div class="language-nginx vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">nginx</span><pre class="shiki one-dark-pro vp-code-dark"><code><span class="line"><span style="color:#C678DD;">location</span><span style="color:#ABB2BF;"> / {</span></span>
<span class="line"><span style="color:#ABB2BF;"> </span><span style="color:#C678DD;"> try_files </span><span style="color:#ABB2BF;">$</span><span style="color:#E06C75;">uri</span><span style="color:#ABB2BF;"> $</span><span style="color:#E06C75;">uri</span><span style="color:#ABB2BF;">/ /index.html;</span></span>
<span class="line"><span style="color:#ABB2BF;">}</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">location</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">/ </span><span style="color:#24292E;">{</span></span>
<span class="line"><span style="color:#24292E;"> </span><span style="color:#D73A49;"> try_files </span><span style="color:#24292E;">$uri $uri/ /index.html;</span></span>
<span class="line"><span style="color:#24292E;">}</span></span></code></pre></div><h3 id="Native-Node-js" tabindex="-1">Native Node.js <a class="header-anchor" href="#Native-Node-js" aria-label="Permalink to &quot;Native Node.js&quot;">​</a></h3><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki one-dark-pro vp-code-dark"><code><span class="line"><span style="color:#C678DD;">const</span><span style="color:#ABB2BF;"> </span><span style="color:#E5C07B;">http</span><span style="color:#ABB2BF;"> </span><span style="color:#56B6C2;">=</span><span style="color:#ABB2BF;"> </span><span style="color:#61AFEF;">require</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&#39;http&#39;</span><span style="color:#ABB2BF;">)</span></span>
<span class="line"><span style="color:#C678DD;">const</span><span style="color:#ABB2BF;"> </span><span style="color:#E5C07B;">fs</span><span style="color:#ABB2BF;"> </span><span style="color:#56B6C2;">=</span><span style="color:#ABB2BF;"> </span><span style="color:#61AFEF;">require</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&#39;fs&#39;</span><span style="color:#ABB2BF;">)</span></span>
<span class="line"><span style="color:#C678DD;">const</span><span style="color:#ABB2BF;"> </span><span style="color:#E5C07B;">httpPort</span><span style="color:#ABB2BF;"> </span><span style="color:#56B6C2;">=</span><span style="color:#ABB2BF;"> </span><span style="color:#D19A66;">80</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E06C75;">http</span></span>
<span class="line"><span style="color:#ABB2BF;">  .</span><span style="color:#61AFEF;">createServer</span><span style="color:#ABB2BF;">((</span><span style="color:#E06C75;font-style:italic;">req</span><span style="color:#ABB2BF;">, </span><span style="color:#E06C75;font-style:italic;">res</span><span style="color:#ABB2BF;">) </span><span style="color:#C678DD;">=&gt;</span><span style="color:#ABB2BF;"> {</span></span>
<span class="line"><span style="color:#ABB2BF;">    </span><span style="color:#E5C07B;">fs</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">readFile</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&#39;index.html&#39;</span><span style="color:#ABB2BF;">, </span><span style="color:#98C379;">&#39;utf-8&#39;</span><span style="color:#ABB2BF;">, (</span><span style="color:#E06C75;font-style:italic;">err</span><span style="color:#ABB2BF;">, </span><span style="color:#E06C75;font-style:italic;">content</span><span style="color:#ABB2BF;">) </span><span style="color:#C678DD;">=&gt;</span><span style="color:#ABB2BF;"> {</span></span>
<span class="line"><span style="color:#ABB2BF;">      </span><span style="color:#C678DD;">if</span><span style="color:#ABB2BF;"> (</span><span style="color:#E06C75;">err</span><span style="color:#ABB2BF;">) {</span></span>
<span class="line"><span style="color:#ABB2BF;">        </span><span style="color:#E5C07B;">console</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">log</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&#39;We cannot open &quot;index.html&quot; file.&#39;</span><span style="color:#ABB2BF;">)</span></span>
<span class="line"><span style="color:#ABB2BF;">      }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#ABB2BF;">      </span><span style="color:#E5C07B;">res</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">writeHead</span><span style="color:#ABB2BF;">(</span><span style="color:#D19A66;">200</span><span style="color:#ABB2BF;">, {</span></span>
<span class="line"><span style="color:#ABB2BF;">        </span><span style="color:#98C379;">&#39;Content-Type&#39;</span><span style="color:#ABB2BF;">: </span><span style="color:#98C379;">&#39;text/html; charset=utf-8&#39;</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#ABB2BF;">      })</span></span>
<span class="line"></span>
<span class="line"><span style="color:#ABB2BF;">      </span><span style="color:#E5C07B;">res</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">end</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">content</span><span style="color:#ABB2BF;">)</span></span>
<span class="line"><span style="color:#ABB2BF;">    })</span></span>
<span class="line"><span style="color:#ABB2BF;">  })</span></span>
<span class="line"><span style="color:#ABB2BF;">  .</span><span style="color:#61AFEF;">listen</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">httpPort</span><span style="color:#ABB2BF;">, () </span><span style="color:#C678DD;">=&gt;</span><span style="color:#ABB2BF;"> {</span></span>
<span class="line"><span style="color:#ABB2BF;">    </span><span style="color:#E5C07B;">console</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">log</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&#39;Server listening on: http://localhost:%s&#39;</span><span style="color:#ABB2BF;">, </span><span style="color:#E06C75;">httpPort</span><span style="color:#ABB2BF;">)</span></span>
<span class="line"><span style="color:#ABB2BF;">  })</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">http</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">require</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&#39;http&#39;</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">fs</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">require</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&#39;fs&#39;</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">httpPort</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">80</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">http</span></span>
<span class="line"><span style="color:#24292E;">  .</span><span style="color:#6F42C1;">createServer</span><span style="color:#24292E;">((</span><span style="color:#E36209;">req</span><span style="color:#24292E;">, </span><span style="color:#E36209;">res</span><span style="color:#24292E;">) </span><span style="color:#D73A49;">=&gt;</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">    fs.</span><span style="color:#6F42C1;">readFile</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&#39;index.html&#39;</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&#39;utf-8&#39;</span><span style="color:#24292E;">, (</span><span style="color:#E36209;">err</span><span style="color:#24292E;">, </span><span style="color:#E36209;">content</span><span style="color:#24292E;">) </span><span style="color:#D73A49;">=&gt;</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#D73A49;">if</span><span style="color:#24292E;"> (err) {</span></span>
<span class="line"><span style="color:#24292E;">        console.</span><span style="color:#6F42C1;">log</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&#39;We cannot open &quot;index.html&quot; file.&#39;</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#24292E;">      }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">      res.</span><span style="color:#6F42C1;">writeHead</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">200</span><span style="color:#24292E;">, {</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#032F62;">&#39;Content-Type&#39;</span><span style="color:#24292E;">: </span><span style="color:#032F62;">&#39;text/html; charset=utf-8&#39;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">      })</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">      res.</span><span style="color:#6F42C1;">end</span><span style="color:#24292E;">(content)</span></span>
<span class="line"><span style="color:#24292E;">    })</span></span>
<span class="line"><span style="color:#24292E;">  })</span></span>
<span class="line"><span style="color:#24292E;">  .</span><span style="color:#6F42C1;">listen</span><span style="color:#24292E;">(httpPort, () </span><span style="color:#D73A49;">=&gt;</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">    console.</span><span style="color:#6F42C1;">log</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&#39;Server listening on: http://localhost:%s&#39;</span><span style="color:#24292E;">, httpPort)</span></span>
<span class="line"><span style="color:#24292E;">  })</span></span></code></pre></div><h3 id="Express-with-Node-js" tabindex="-1">Express with Node.js <a class="header-anchor" href="#Express-with-Node-js" aria-label="Permalink to &quot;Express with Node.js&quot;">​</a></h3><p>For Node.js/Express, consider using <a href="https://github.com/bripkens/connect-history-api-fallback" target="_blank" rel="noreferrer">connect-history-api-fallback middleware</a>.</p><h3 id="Internet-Information-Services-IIS-" tabindex="-1">Internet Information Services (IIS) <a class="header-anchor" href="#Internet-Information-Services-IIS-" aria-label="Permalink to &quot;Internet Information Services (IIS)&quot;">​</a></h3><ol><li>Install <a href="https://www.iis.net/downloads/microsoft/url-rewrite" target="_blank" rel="noreferrer">IIS UrlRewrite</a></li><li>Create a <code>web.config</code> file in the root directory of your site with the following:</li></ol><div class="language-xml vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">xml</span><pre class="shiki one-dark-pro vp-code-dark"><code><span class="line"><span style="color:#ABB2BF;">&lt;?</span><span style="color:#E06C75;">xml</span><span style="color:#D19A66;"> version</span><span style="color:#ABB2BF;">=</span><span style="color:#98C379;">&quot;1.0&quot;</span><span style="color:#D19A66;"> encoding</span><span style="color:#ABB2BF;">=</span><span style="color:#98C379;">&quot;UTF-8&quot;</span><span style="color:#ABB2BF;">?&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;">&lt;</span><span style="color:#E06C75;">configuration</span><span style="color:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;">  &lt;</span><span style="color:#E06C75;">system.webServer</span><span style="color:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;">    &lt;</span><span style="color:#E06C75;">rewrite</span><span style="color:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;">      &lt;</span><span style="color:#E06C75;">rules</span><span style="color:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;">        &lt;</span><span style="color:#E06C75;">rule</span><span style="color:#ABB2BF;"> </span><span style="color:#D19A66;">name</span><span style="color:#ABB2BF;">=</span><span style="color:#98C379;">&quot;Handle History Mode and custom 404/500&quot;</span><span style="color:#ABB2BF;"> </span><span style="color:#D19A66;">stopProcessing</span><span style="color:#ABB2BF;">=</span><span style="color:#98C379;">&quot;true&quot;</span><span style="color:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;">          &lt;</span><span style="color:#E06C75;">match</span><span style="color:#ABB2BF;"> </span><span style="color:#D19A66;">url</span><span style="color:#ABB2BF;">=</span><span style="color:#98C379;">&quot;(.*)&quot;</span><span style="color:#ABB2BF;"> /&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;">          &lt;</span><span style="color:#E06C75;">conditions</span><span style="color:#ABB2BF;"> </span><span style="color:#D19A66;">logicalGrouping</span><span style="color:#ABB2BF;">=</span><span style="color:#98C379;">&quot;MatchAll&quot;</span><span style="color:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;">            &lt;</span><span style="color:#E06C75;">add</span><span style="color:#ABB2BF;"> </span><span style="color:#D19A66;">input</span><span style="color:#ABB2BF;">=</span><span style="color:#98C379;">&quot;{REQUEST_FILENAME}&quot;</span><span style="color:#ABB2BF;"> </span><span style="color:#D19A66;">matchType</span><span style="color:#ABB2BF;">=</span><span style="color:#98C379;">&quot;IsFile&quot;</span><span style="color:#ABB2BF;"> </span><span style="color:#D19A66;">negate</span><span style="color:#ABB2BF;">=</span><span style="color:#98C379;">&quot;true&quot;</span><span style="color:#ABB2BF;"> /&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;">            &lt;</span><span style="color:#E06C75;">add</span><span style="color:#ABB2BF;"> </span><span style="color:#D19A66;">input</span><span style="color:#ABB2BF;">=</span><span style="color:#98C379;">&quot;{REQUEST_FILENAME}&quot;</span><span style="color:#ABB2BF;"> </span><span style="color:#D19A66;">matchType</span><span style="color:#ABB2BF;">=</span><span style="color:#98C379;">&quot;IsDirectory&quot;</span><span style="color:#ABB2BF;"> </span><span style="color:#D19A66;">negate</span><span style="color:#ABB2BF;">=</span><span style="color:#98C379;">&quot;true&quot;</span><span style="color:#ABB2BF;"> /&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;">          &lt;/</span><span style="color:#E06C75;">conditions</span><span style="color:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;">          &lt;</span><span style="color:#E06C75;">action</span><span style="color:#ABB2BF;"> </span><span style="color:#D19A66;">type</span><span style="color:#ABB2BF;">=</span><span style="color:#98C379;">&quot;Rewrite&quot;</span><span style="color:#ABB2BF;"> </span><span style="color:#D19A66;">url</span><span style="color:#ABB2BF;">=</span><span style="color:#98C379;">&quot;/&quot;</span><span style="color:#ABB2BF;"> /&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;">        &lt;/</span><span style="color:#E06C75;">rule</span><span style="color:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;">      &lt;/</span><span style="color:#E06C75;">rules</span><span style="color:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;">    &lt;/</span><span style="color:#E06C75;">rewrite</span><span style="color:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;">  &lt;/</span><span style="color:#E06C75;">system.webServer</span><span style="color:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;">&lt;/</span><span style="color:#E06C75;">configuration</span><span style="color:#ABB2BF;">&gt;</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">&lt;?</span><span style="color:#22863A;">xml</span><span style="color:#6F42C1;"> version</span><span style="color:#24292E;">=</span><span style="color:#032F62;">&quot;1.0&quot;</span><span style="color:#6F42C1;"> encoding</span><span style="color:#24292E;">=</span><span style="color:#032F62;">&quot;UTF-8&quot;</span><span style="color:#24292E;">?&gt;</span></span>
<span class="line"><span style="color:#24292E;">&lt;</span><span style="color:#22863A;">configuration</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">  &lt;</span><span style="color:#22863A;">system.webServer</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">    &lt;</span><span style="color:#22863A;">rewrite</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">      &lt;</span><span style="color:#22863A;">rules</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">        &lt;</span><span style="color:#22863A;">rule</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">name</span><span style="color:#24292E;">=</span><span style="color:#032F62;">&quot;Handle History Mode and custom 404/500&quot;</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">stopProcessing</span><span style="color:#24292E;">=</span><span style="color:#032F62;">&quot;true&quot;</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">          &lt;</span><span style="color:#22863A;">match</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">url</span><span style="color:#24292E;">=</span><span style="color:#032F62;">&quot;(.*)&quot;</span><span style="color:#24292E;"> /&gt;</span></span>
<span class="line"><span style="color:#24292E;">          &lt;</span><span style="color:#22863A;">conditions</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">logicalGrouping</span><span style="color:#24292E;">=</span><span style="color:#032F62;">&quot;MatchAll&quot;</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">            &lt;</span><span style="color:#22863A;">add</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">input</span><span style="color:#24292E;">=</span><span style="color:#032F62;">&quot;{REQUEST_FILENAME}&quot;</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">matchType</span><span style="color:#24292E;">=</span><span style="color:#032F62;">&quot;IsFile&quot;</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">negate</span><span style="color:#24292E;">=</span><span style="color:#032F62;">&quot;true&quot;</span><span style="color:#24292E;"> /&gt;</span></span>
<span class="line"><span style="color:#24292E;">            &lt;</span><span style="color:#22863A;">add</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">input</span><span style="color:#24292E;">=</span><span style="color:#032F62;">&quot;{REQUEST_FILENAME}&quot;</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">matchType</span><span style="color:#24292E;">=</span><span style="color:#032F62;">&quot;IsDirectory&quot;</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">negate</span><span style="color:#24292E;">=</span><span style="color:#032F62;">&quot;true&quot;</span><span style="color:#24292E;"> /&gt;</span></span>
<span class="line"><span style="color:#24292E;">          &lt;/</span><span style="color:#22863A;">conditions</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">          &lt;</span><span style="color:#22863A;">action</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">type</span><span style="color:#24292E;">=</span><span style="color:#032F62;">&quot;Rewrite&quot;</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">url</span><span style="color:#24292E;">=</span><span style="color:#032F62;">&quot;/&quot;</span><span style="color:#24292E;"> /&gt;</span></span>
<span class="line"><span style="color:#24292E;">        &lt;/</span><span style="color:#22863A;">rule</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">      &lt;/</span><span style="color:#22863A;">rules</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">    &lt;/</span><span style="color:#22863A;">rewrite</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">  &lt;/</span><span style="color:#22863A;">system.webServer</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">&lt;/</span><span style="color:#22863A;">configuration</span><span style="color:#24292E;">&gt;</span></span></code></pre></div><h3 id="Caddy-v2" tabindex="-1">Caddy v2 <a class="header-anchor" href="#Caddy-v2" aria-label="Permalink to &quot;Caddy v2&quot;">​</a></h3><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki one-dark-pro vp-code-dark"><code><span class="line"><span style="color:#abb2bf;">try_files {path} /</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292e;">try_files {path} /</span></span></code></pre></div><h3 id="Caddy-v1" tabindex="-1">Caddy v1 <a class="header-anchor" href="#Caddy-v1" aria-label="Permalink to &quot;Caddy v1&quot;">​</a></h3><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki one-dark-pro vp-code-dark"><code><span class="line"><span style="color:#abb2bf;">rewrite {</span></span>
<span class="line"><span style="color:#abb2bf;">    regexp .*</span></span>
<span class="line"><span style="color:#abb2bf;">    to {path} /</span></span>
<span class="line"><span style="color:#abb2bf;">}</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292e;">rewrite {</span></span>
<span class="line"><span style="color:#24292e;">    regexp .*</span></span>
<span class="line"><span style="color:#24292e;">    to {path} /</span></span>
<span class="line"><span style="color:#24292e;">}</span></span></code></pre></div><h3 id="Firebase-hosting" tabindex="-1">Firebase hosting <a class="header-anchor" href="#Firebase-hosting" aria-label="Permalink to &quot;Firebase hosting&quot;">​</a></h3><p>Add this to your <code>firebase.json</code>:</p><div class="language-json vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">json</span><pre class="shiki one-dark-pro vp-code-dark"><code><span class="line"><span style="color:#ABB2BF;">{</span></span>
<span class="line"><span style="color:#ABB2BF;">  </span><span style="color:#E06C75;">&quot;hosting&quot;</span><span style="color:#ABB2BF;">: {</span></span>
<span class="line"><span style="color:#ABB2BF;">    </span><span style="color:#E06C75;">&quot;public&quot;</span><span style="color:#ABB2BF;">: </span><span style="color:#98C379;">&quot;dist&quot;</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#ABB2BF;">    </span><span style="color:#E06C75;">&quot;rewrites&quot;</span><span style="color:#ABB2BF;">: [</span></span>
<span class="line"><span style="color:#ABB2BF;">      {</span></span>
<span class="line"><span style="color:#ABB2BF;">        </span><span style="color:#E06C75;">&quot;source&quot;</span><span style="color:#ABB2BF;">: </span><span style="color:#98C379;">&quot;**&quot;</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#ABB2BF;">        </span><span style="color:#E06C75;">&quot;destination&quot;</span><span style="color:#ABB2BF;">: </span><span style="color:#98C379;">&quot;/index.html&quot;</span></span>
<span class="line"><span style="color:#ABB2BF;">      }</span></span>
<span class="line"><span style="color:#ABB2BF;">    ]</span></span>
<span class="line"><span style="color:#ABB2BF;">  }</span></span>
<span class="line"><span style="color:#ABB2BF;">}</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">{</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#005CC5;">&quot;hosting&quot;</span><span style="color:#24292E;">: {</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#005CC5;">&quot;public&quot;</span><span style="color:#24292E;">: </span><span style="color:#032F62;">&quot;dist&quot;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#005CC5;">&quot;rewrites&quot;</span><span style="color:#24292E;">: [</span></span>
<span class="line"><span style="color:#24292E;">      {</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#005CC5;">&quot;source&quot;</span><span style="color:#24292E;">: </span><span style="color:#032F62;">&quot;**&quot;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#005CC5;">&quot;destination&quot;</span><span style="color:#24292E;">: </span><span style="color:#032F62;">&quot;/index.html&quot;</span></span>
<span class="line"><span style="color:#24292E;">      }</span></span>
<span class="line"><span style="color:#24292E;">    ]</span></span>
<span class="line"><span style="color:#24292E;">  }</span></span>
<span class="line"><span style="color:#24292E;">}</span></span></code></pre></div><h3 id="Netlify" tabindex="-1">Netlify <a class="header-anchor" href="#Netlify" aria-label="Permalink to &quot;Netlify&quot;">​</a></h3><p>Create a <code>_redirects</code> file that is included with your deployed files:</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki one-dark-pro vp-code-dark"><code><span class="line"><span style="color:#abb2bf;">/* /index.html 200</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292e;">/* /index.html 200</span></span></code></pre></div><p>In vue-cli, nuxt, and vite projects, this file usually goes under a folder named <code>static</code> or <code>public</code>.</p><p>You can read more about the syntax on <a href="https://docs.netlify.com/routing/redirects/rewrites-proxies/#history-pushstate-and-single-page-apps" target="_blank" rel="noreferrer">Netlify documentation</a>. You can also <a href="https://docs.netlify.com/configure-builds/file-based-configuration/" target="_blank" rel="noreferrer">create a <code>netlify.toml</code></a> to combine <em>redirections</em> with other Netlify features.</p><h3 id="Vercel" tabindex="-1">Vercel <a class="header-anchor" href="#Vercel" aria-label="Permalink to &quot;Vercel&quot;">​</a></h3><p>Create a <code>vercel.json</code> file under the root directory of your project with the following:</p><div class="language-json vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">json</span><pre class="shiki one-dark-pro vp-code-dark"><code><span class="line"><span style="color:#ABB2BF;">{</span></span>
<span class="line"><span style="color:#ABB2BF;">  </span><span style="color:#E06C75;">&quot;rewrites&quot;</span><span style="color:#ABB2BF;">: [{ </span><span style="color:#E06C75;">&quot;source&quot;</span><span style="color:#ABB2BF;">: </span><span style="color:#98C379;">&quot;/:path*&quot;</span><span style="color:#ABB2BF;">, </span><span style="color:#E06C75;">&quot;destination&quot;</span><span style="color:#ABB2BF;">: </span><span style="color:#98C379;">&quot;/index.html&quot;</span><span style="color:#ABB2BF;"> }]</span></span>
<span class="line"><span style="color:#ABB2BF;">}</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">{</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#005CC5;">&quot;rewrites&quot;</span><span style="color:#24292E;">: [{ </span><span style="color:#005CC5;">&quot;source&quot;</span><span style="color:#24292E;">: </span><span style="color:#032F62;">&quot;/:path*&quot;</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">&quot;destination&quot;</span><span style="color:#24292E;">: </span><span style="color:#032F62;">&quot;/index.html&quot;</span><span style="color:#24292E;"> }]</span></span>
<span class="line"><span style="color:#24292E;">}</span></span></code></pre></div><h2 id="Caveat" tabindex="-1">Caveat <a class="header-anchor" href="#Caveat" aria-label="Permalink to &quot;Caveat&quot;">​</a></h2><p>There is a caveat to this: Your server will no longer report 404 errors as all not-found paths now serve up your <code>index.html</code> file. To get around the issue, you should implement a catch-all route within your Vue app to show a 404 page:</p><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki one-dark-pro vp-code-dark"><code><span class="line"><span style="color:#C678DD;">const</span><span style="color:#ABB2BF;"> </span><span style="color:#E5C07B;">router</span><span style="color:#ABB2BF;"> </span><span style="color:#56B6C2;">=</span><span style="color:#ABB2BF;"> </span><span style="color:#61AFEF;">createRouter</span><span style="color:#ABB2BF;">({</span></span>
<span class="line"><span style="color:#ABB2BF;">  </span><span style="color:#E06C75;">history</span><span style="color:#ABB2BF;">: </span><span style="color:#61AFEF;">createWebHistory</span><span style="color:#ABB2BF;">(),</span></span>
<span class="line"><span style="color:#ABB2BF;">  </span><span style="color:#E06C75;">routes</span><span style="color:#ABB2BF;">: [{ </span><span style="color:#E06C75;">path</span><span style="color:#ABB2BF;">: </span><span style="color:#98C379;">&#39;/:pathMatch(.*)&#39;</span><span style="color:#ABB2BF;">, </span><span style="color:#E06C75;">component</span><span style="color:#ABB2BF;">: </span><span style="color:#E06C75;">NotFoundComponent</span><span style="color:#ABB2BF;"> }],</span></span>
<span class="line"><span style="color:#ABB2BF;">})</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">router</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">createRouter</span><span style="color:#24292E;">({</span></span>
<span class="line"><span style="color:#24292E;">  history: </span><span style="color:#6F42C1;">createWebHistory</span><span style="color:#24292E;">(),</span></span>
<span class="line"><span style="color:#24292E;">  routes: [{ path: </span><span style="color:#032F62;">&#39;/:pathMatch(.*)&#39;</span><span style="color:#24292E;">, component: NotFoundComponent }],</span></span>
<span class="line"><span style="color:#24292E;">})</span></span></code></pre></div><p>Alternatively, if you are using a Node.js server, you can implement the fallback by using the router on the server side to match the incoming URL and respond with 404 if no route is matched. Check out the <a href="https://v3.vuejs.org/guide/ssr/introduction.html#what-is-server-side-rendering-ssr" target="_blank" rel="noreferrer">Vue server side rendering documentation</a> for more information.</p>`,48);function B(d,u,h,F,E,A){const a=r("VueSchoolLink");return o(),l("div",null,[y,e(a,{href:"https://vueschool.io/lessons/history-mode",title:"Learn about the differences between Hash Mode and HTML5 Mode"}),i])}const m=n(c,[["render",B]]);export{g as __pageData,m as default};
