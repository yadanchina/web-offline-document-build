import{_ as e,v as a,b as o,R as t}from"./chunks/framework.dd59a003.js";const q=JSON.parse('{"title":"Interface: RouterLinkProps","description":"","frontmatter":{"editLink":false},"headers":[],"relativePath":"api/interfaces/RouterLinkProps.md","filePath":"api/interfaces/RouterLinkProps.md"}'),r={name:"api/interfaces/RouterLinkProps.md"},i=t('<p><a href="./../">API Documentation</a> / RouterLinkProps</p><h1 id="Interface-RouterLinkProps" tabindex="-1">Interface: RouterLinkProps <a class="header-anchor" href="#Interface-RouterLinkProps" aria-label="Permalink to &quot;Interface: RouterLinkProps&quot;">​</a></h1><h2 id="Hierarchy" tabindex="-1">Hierarchy <a class="header-anchor" href="#Hierarchy" aria-label="Permalink to &quot;Hierarchy&quot;">​</a></h2><ul><li><p><code>RouterLinkOptions</code></p><p>↳ <strong><code>RouterLinkProps</code></strong></p></li></ul><h2 id="Properties" tabindex="-1">Properties <a class="header-anchor" href="#Properties" aria-label="Permalink to &quot;Properties&quot;">​</a></h2><h3 id="activeClass" tabindex="-1">activeClass <a class="header-anchor" href="#activeClass" aria-label="Permalink to &quot;activeClass&quot;">​</a></h3><p>• <code>Optional</code> <strong>activeClass</strong>: <code>string</code></p><p>Class to apply when the link is active</p><hr><h3 id="ariaCurrentValue" tabindex="-1">ariaCurrentValue <a class="header-anchor" href="#ariaCurrentValue" aria-label="Permalink to &quot;ariaCurrentValue&quot;">​</a></h3><p>• <code>Optional</code> <strong>ariaCurrentValue</strong>: <code>&quot;location&quot;</code> | <code>&quot;time&quot;</code> | <code>&quot;page&quot;</code> | <code>&quot;step&quot;</code> | <code>&quot;date&quot;</code> | <code>&quot;true&quot;</code> | <code>&quot;false&quot;</code></p><p>Value passed to the attribute <code>aria-current</code> when the link is exact active.</p><p><strong><code>Default Value</code></strong></p><p><code>&#39;page&#39;</code></p><hr><h3 id="custom" tabindex="-1">custom <a class="header-anchor" href="#custom" aria-label="Permalink to &quot;custom&quot;">​</a></h3><p>• <code>Optional</code> <strong>custom</strong>: <code>boolean</code></p><p>Whether RouterLink should not wrap its content in an <code>a</code> tag. Useful when using <code>v-slot</code> to create a custom RouterLink</p><hr><h3 id="exactActiveClass" tabindex="-1">exactActiveClass <a class="header-anchor" href="#exactActiveClass" aria-label="Permalink to &quot;exactActiveClass&quot;">​</a></h3><p>• <code>Optional</code> <strong>exactActiveClass</strong>: <code>string</code></p><p>Class to apply when the link is exact active</p><hr><h3 id="replace" tabindex="-1">replace <a class="header-anchor" href="#replace" aria-label="Permalink to &quot;replace&quot;">​</a></h3><p>• <code>Optional</code> <strong>replace</strong>: <code>boolean</code></p><p>Calls <code>router.replace</code> instead of <code>router.push</code>.</p><h4 id="Inherited-from" tabindex="-1">Inherited from <a class="header-anchor" href="#Inherited-from" aria-label="Permalink to &quot;Inherited from&quot;">​</a></h4><p>RouterLinkOptions.replace</p><hr><h3 id="to" tabindex="-1">to <a class="header-anchor" href="#to" aria-label="Permalink to &quot;to&quot;">​</a></h3><p>• <strong>to</strong>: <a href="./../#RouteLocationRaw"><code>RouteLocationRaw</code></a></p><p>Route Location the link should navigate to when clicked on.</p><h4 id="Inherited-from-1" tabindex="-1">Inherited from <a class="header-anchor" href="#Inherited-from-1" aria-label="Permalink to &quot;Inherited from&quot;">​</a></h4><p>RouterLinkOptions.to</p>',34),c=[i];function n(s,d,l,h,u,p){return a(),o("div",null,c)}const m=e(r,[["render",n]]);export{q as __pageData,m as default};
