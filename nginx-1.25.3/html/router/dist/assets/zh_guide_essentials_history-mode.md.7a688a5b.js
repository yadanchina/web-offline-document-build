import{_ as n,v as l,b as o,t as p,F as s,L as e,R as t,M as c}from"./chunks/framework.dd59a003.js";const g=JSON.parse('{"title":"不同的历史模式","description":"","frontmatter":{},"headers":[],"relativePath":"zh/guide/essentials/history-mode.md","filePath":"zh/guide/essentials/history-mode.md"}'),r={name:"zh/guide/essentials/history-mode.md"},y=s("h1",{id:"不同的历史模式",tabindex:"-1"},[e("不同的历史模式 "),s("a",{class:"header-anchor",href:"#不同的历史模式","aria-label":'Permalink to "不同的历史模式"'},"​")],-1),i=t(`<p>在创建路由器实例时，<code>history</code> 配置允许我们在不同的历史模式中进行选择。</p><h2 id="Hash-模式" tabindex="-1">Hash 模式 <a class="header-anchor" href="#Hash-模式" aria-label="Permalink to &quot;Hash 模式&quot;">​</a></h2><p>hash 模式是用 <code>createWebHashHistory()</code> 创建的：</p><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki one-dark-pro vp-code-dark"><code><span class="line"><span style="color:#C678DD;">import</span><span style="color:#ABB2BF;"> { </span><span style="color:#E06C75;">createRouter</span><span style="color:#ABB2BF;">, </span><span style="color:#E06C75;">createWebHashHistory</span><span style="color:#ABB2BF;"> } </span><span style="color:#C678DD;">from</span><span style="color:#ABB2BF;"> </span><span style="color:#98C379;">&#39;vue-router&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C678DD;">const</span><span style="color:#ABB2BF;"> </span><span style="color:#E5C07B;">router</span><span style="color:#ABB2BF;"> </span><span style="color:#56B6C2;">=</span><span style="color:#ABB2BF;"> </span><span style="color:#61AFEF;">createRouter</span><span style="color:#ABB2BF;">({</span></span>
<span class="line"><span style="color:#ABB2BF;">  </span><span style="color:#E06C75;">history</span><span style="color:#ABB2BF;">: </span><span style="color:#61AFEF;">createWebHashHistory</span><span style="color:#ABB2BF;">(),</span></span>
<span class="line"><span style="color:#ABB2BF;">  </span><span style="color:#E06C75;">routes</span><span style="color:#ABB2BF;">: [</span></span>
<span class="line"><span style="color:#ABB2BF;">    </span><span style="color:#7F848E;font-style:italic;">//...</span></span>
<span class="line"><span style="color:#ABB2BF;">  ],</span></span>
<span class="line"><span style="color:#ABB2BF;">})</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">import</span><span style="color:#24292E;"> { createRouter, createWebHashHistory } </span><span style="color:#D73A49;">from</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&#39;vue-router&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">router</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">createRouter</span><span style="color:#24292E;">({</span></span>
<span class="line"><span style="color:#24292E;">  history: </span><span style="color:#6F42C1;">createWebHashHistory</span><span style="color:#24292E;">(),</span></span>
<span class="line"><span style="color:#24292E;">  routes: [</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6A737D;">//...</span></span>
<span class="line"><span style="color:#24292E;">  ],</span></span>
<span class="line"><span style="color:#24292E;">})</span></span></code></pre></div><p>它在内部传递的实际 URL 之前使用了一个哈希字符（<code>#</code>）。由于这部分 URL 从未被发送到服务器，所以它不需要在服务器层面上进行任何特殊处理。不过，<strong>它在 SEO 中确实有不好的影响</strong>。如果你担心这个问题，可以使用 HTML5 模式。</p><h2 id="HTML5-模式" tabindex="-1">HTML5 模式 <a class="header-anchor" href="#HTML5-模式" aria-label="Permalink to &quot;HTML5 模式&quot;">​</a></h2><p>用 <code>createWebHistory()</code> 创建 HTML5 模式，推荐使用这个模式：</p><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki one-dark-pro vp-code-dark"><code><span class="line"><span style="color:#C678DD;">import</span><span style="color:#ABB2BF;"> { </span><span style="color:#E06C75;">createRouter</span><span style="color:#ABB2BF;">, </span><span style="color:#E06C75;">createWebHistory</span><span style="color:#ABB2BF;"> } </span><span style="color:#C678DD;">from</span><span style="color:#ABB2BF;"> </span><span style="color:#98C379;">&#39;vue-router&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C678DD;">const</span><span style="color:#ABB2BF;"> </span><span style="color:#E5C07B;">router</span><span style="color:#ABB2BF;"> </span><span style="color:#56B6C2;">=</span><span style="color:#ABB2BF;"> </span><span style="color:#61AFEF;">createRouter</span><span style="color:#ABB2BF;">({</span></span>
<span class="line"><span style="color:#ABB2BF;">  </span><span style="color:#E06C75;">history</span><span style="color:#ABB2BF;">: </span><span style="color:#61AFEF;">createWebHistory</span><span style="color:#ABB2BF;">(),</span></span>
<span class="line"><span style="color:#ABB2BF;">  </span><span style="color:#E06C75;">routes</span><span style="color:#ABB2BF;">: [</span></span>
<span class="line"><span style="color:#ABB2BF;">    </span><span style="color:#7F848E;font-style:italic;">//...</span></span>
<span class="line"><span style="color:#ABB2BF;">  ],</span></span>
<span class="line"><span style="color:#ABB2BF;">})</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">import</span><span style="color:#24292E;"> { createRouter, createWebHistory } </span><span style="color:#D73A49;">from</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&#39;vue-router&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">router</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">createRouter</span><span style="color:#24292E;">({</span></span>
<span class="line"><span style="color:#24292E;">  history: </span><span style="color:#6F42C1;">createWebHistory</span><span style="color:#24292E;">(),</span></span>
<span class="line"><span style="color:#24292E;">  routes: [</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6A737D;">//...</span></span>
<span class="line"><span style="color:#24292E;">  ],</span></span>
<span class="line"><span style="color:#24292E;">})</span></span></code></pre></div><p>当使用这种历史模式时，URL 会看起来很 &quot;正常&quot;，例如 <code>https://example.com/user/id</code>。漂亮!</p><p>不过，问题来了。由于我们的应用是一个单页的客户端应用，如果没有适当的服务器配置，用户在浏览器中直接访问 <code>https://example.com/user/id</code>，就会得到一个 404 错误。这就尴尬了。</p><p>不用担心：要解决这个问题，你需要做的就是在你的服务器上添加一个简单的回退路由。如果 URL 不匹配任何静态资源，它应提供与你的应用程序中的 <code>index.html</code> 相同的页面。漂亮依旧!</p><h2 id="服务器配置示例" tabindex="-1">服务器配置示例 <a class="header-anchor" href="#服务器配置示例" aria-label="Permalink to &quot;服务器配置示例&quot;">​</a></h2><p><strong>注意</strong>：以下示例假定你正在从根目录提供服务。如果你部署到子目录，你应该使用<a href="https://cli.vuejs.org/config/#publicpath" target="_blank" rel="noreferrer">Vue CLI 的 <code>publicPath</code> 配置</a>和相关的<a href="./../../api/#Functions-createWebHistory">路由器的 <code>base</code> 属性</a>。你还需要调整下面的例子，以使用子目录而不是根目录（例如，将<code>RewriteBase/</code> 替换为 <code>RewriteBase/name-of-your-subfolder/</code>）。</p><h3 id="Apache" tabindex="-1">Apache <a class="header-anchor" href="#Apache" aria-label="Permalink to &quot;Apache&quot;">​</a></h3><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki one-dark-pro vp-code-dark"><code><span class="line"><span style="color:#abb2bf;">&lt;IfModule mod_negotiation.c&gt;</span></span>
<span class="line"><span style="color:#abb2bf;">  Options -MultiViews</span></span>
<span class="line"><span style="color:#abb2bf;">&lt;/IfModule&gt;</span></span>
<span class="line"><span style="color:#abb2bf;"></span></span>
<span class="line"><span style="color:#abb2bf;">&lt;IfModule mod_rewrite.c&gt;</span></span>
<span class="line"><span style="color:#abb2bf;">  RewriteEngine On</span></span>
<span class="line"><span style="color:#abb2bf;">  RewriteBase /</span></span>
<span class="line"><span style="color:#abb2bf;">  RewriteRule ^index\\.html$ - [L]</span></span>
<span class="line"><span style="color:#abb2bf;">  RewriteCond %{REQUEST_FILENAME} !-f</span></span>
<span class="line"><span style="color:#abb2bf;">  RewriteCond %{REQUEST_FILENAME} !-d</span></span>
<span class="line"><span style="color:#abb2bf;">  RewriteRule . /index.html [L]</span></span>
<span class="line"><span style="color:#abb2bf;">&lt;/IfModule&gt;</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292e;">&lt;IfModule mod_negotiation.c&gt;</span></span>
<span class="line"><span style="color:#24292e;">  Options -MultiViews</span></span>
<span class="line"><span style="color:#24292e;">&lt;/IfModule&gt;</span></span>
<span class="line"><span style="color:#24292e;"></span></span>
<span class="line"><span style="color:#24292e;">&lt;IfModule mod_rewrite.c&gt;</span></span>
<span class="line"><span style="color:#24292e;">  RewriteEngine On</span></span>
<span class="line"><span style="color:#24292e;">  RewriteBase /</span></span>
<span class="line"><span style="color:#24292e;">  RewriteRule ^index\\.html$ - [L]</span></span>
<span class="line"><span style="color:#24292e;">  RewriteCond %{REQUEST_FILENAME} !-f</span></span>
<span class="line"><span style="color:#24292e;">  RewriteCond %{REQUEST_FILENAME} !-d</span></span>
<span class="line"><span style="color:#24292e;">  RewriteRule . /index.html [L]</span></span>
<span class="line"><span style="color:#24292e;">&lt;/IfModule&gt;</span></span></code></pre></div><p>也可以使用 <a href="https://httpd.apache.org/docs/2.2/mod/mod_dir.html#fallbackresource" target="_blank" rel="noreferrer"><code>FallbackResource</code></a> 代替 <code>mod_rewrite</code>。</p><h3 id="nginx" tabindex="-1">nginx <a class="header-anchor" href="#nginx" aria-label="Permalink to &quot;nginx&quot;">​</a></h3><div class="language-nginx vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">nginx</span><pre class="shiki one-dark-pro vp-code-dark"><code><span class="line"><span style="color:#C678DD;">location</span><span style="color:#ABB2BF;"> / {</span></span>
<span class="line"><span style="color:#ABB2BF;"> </span><span style="color:#C678DD;"> try_files </span><span style="color:#ABB2BF;">$</span><span style="color:#E06C75;">uri</span><span style="color:#ABB2BF;"> $</span><span style="color:#E06C75;">uri</span><span style="color:#ABB2BF;">/ /index.html;</span></span>
<span class="line"><span style="color:#ABB2BF;">}</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">location</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">/ </span><span style="color:#24292E;">{</span></span>
<span class="line"><span style="color:#24292E;"> </span><span style="color:#D73A49;"> try_files </span><span style="color:#24292E;">$uri $uri/ /index.html;</span></span>
<span class="line"><span style="color:#24292E;">}</span></span></code></pre></div><h3 id="原生-Node-js" tabindex="-1">原生 Node.js <a class="header-anchor" href="#原生-Node-js" aria-label="Permalink to &quot;原生 Node.js&quot;">​</a></h3><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki one-dark-pro vp-code-dark"><code><span class="line"><span style="color:#C678DD;">const</span><span style="color:#ABB2BF;"> </span><span style="color:#E5C07B;">http</span><span style="color:#ABB2BF;"> </span><span style="color:#56B6C2;">=</span><span style="color:#ABB2BF;"> </span><span style="color:#61AFEF;">require</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&#39;http&#39;</span><span style="color:#ABB2BF;">)</span></span>
<span class="line"><span style="color:#C678DD;">const</span><span style="color:#ABB2BF;"> </span><span style="color:#E5C07B;">fs</span><span style="color:#ABB2BF;"> </span><span style="color:#56B6C2;">=</span><span style="color:#ABB2BF;"> </span><span style="color:#61AFEF;">require</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&#39;fs&#39;</span><span style="color:#ABB2BF;">)</span></span>
<span class="line"><span style="color:#C678DD;">const</span><span style="color:#ABB2BF;"> </span><span style="color:#E5C07B;">httpPort</span><span style="color:#ABB2BF;"> </span><span style="color:#56B6C2;">=</span><span style="color:#ABB2BF;"> </span><span style="color:#D19A66;">80</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E06C75;">http</span></span>
<span class="line"><span style="color:#ABB2BF;">  .</span><span style="color:#61AFEF;">createServer</span><span style="color:#ABB2BF;">((</span><span style="color:#E06C75;font-style:italic;">req</span><span style="color:#ABB2BF;">, </span><span style="color:#E06C75;font-style:italic;">res</span><span style="color:#ABB2BF;">) </span><span style="color:#C678DD;">=&gt;</span><span style="color:#ABB2BF;"> {</span></span>
<span class="line"><span style="color:#ABB2BF;">    </span><span style="color:#E5C07B;">fs</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">readFile</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&#39;index.html&#39;</span><span style="color:#ABB2BF;">, </span><span style="color:#98C379;">&#39;utf-8&#39;</span><span style="color:#ABB2BF;">, (</span><span style="color:#E06C75;font-style:italic;">err</span><span style="color:#ABB2BF;">, </span><span style="color:#E06C75;font-style:italic;">content</span><span style="color:#ABB2BF;">) </span><span style="color:#C678DD;">=&gt;</span><span style="color:#ABB2BF;"> {</span></span>
<span class="line"><span style="color:#ABB2BF;">      </span><span style="color:#C678DD;">if</span><span style="color:#ABB2BF;"> (</span><span style="color:#E06C75;">err</span><span style="color:#ABB2BF;">) {</span></span>
<span class="line"><span style="color:#ABB2BF;">        </span><span style="color:#E5C07B;">console</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">log</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&#39;We cannot open &quot;index.html&quot; file.&#39;</span><span style="color:#ABB2BF;">)</span></span>
<span class="line"><span style="color:#ABB2BF;">      }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#ABB2BF;">      </span><span style="color:#E5C07B;">res</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">writeHead</span><span style="color:#ABB2BF;">(</span><span style="color:#D19A66;">200</span><span style="color:#ABB2BF;">, {</span></span>
<span class="line"><span style="color:#ABB2BF;">        </span><span style="color:#98C379;">&#39;Content-Type&#39;</span><span style="color:#ABB2BF;">: </span><span style="color:#98C379;">&#39;text/html; charset=utf-8&#39;</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#ABB2BF;">      })</span></span>
<span class="line"></span>
<span class="line"><span style="color:#ABB2BF;">      </span><span style="color:#E5C07B;">res</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">end</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">content</span><span style="color:#ABB2BF;">)</span></span>
<span class="line"><span style="color:#ABB2BF;">    })</span></span>
<span class="line"><span style="color:#ABB2BF;">  })</span></span>
<span class="line"><span style="color:#ABB2BF;">  .</span><span style="color:#61AFEF;">listen</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">httpPort</span><span style="color:#ABB2BF;">, () </span><span style="color:#C678DD;">=&gt;</span><span style="color:#ABB2BF;"> {</span></span>
<span class="line"><span style="color:#ABB2BF;">    </span><span style="color:#E5C07B;">console</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">log</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&#39;Server listening on: http://localhost:%s&#39;</span><span style="color:#ABB2BF;">, </span><span style="color:#E06C75;">httpPort</span><span style="color:#ABB2BF;">)</span></span>
<span class="line"><span style="color:#ABB2BF;">  })</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">http</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">require</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&#39;http&#39;</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">fs</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">require</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&#39;fs&#39;</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">httpPort</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">80</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">http</span></span>
<span class="line"><span style="color:#24292E;">  .</span><span style="color:#6F42C1;">createServer</span><span style="color:#24292E;">((</span><span style="color:#E36209;">req</span><span style="color:#24292E;">, </span><span style="color:#E36209;">res</span><span style="color:#24292E;">) </span><span style="color:#D73A49;">=&gt;</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">    fs.</span><span style="color:#6F42C1;">readFile</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&#39;index.html&#39;</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&#39;utf-8&#39;</span><span style="color:#24292E;">, (</span><span style="color:#E36209;">err</span><span style="color:#24292E;">, </span><span style="color:#E36209;">content</span><span style="color:#24292E;">) </span><span style="color:#D73A49;">=&gt;</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#D73A49;">if</span><span style="color:#24292E;"> (err) {</span></span>
<span class="line"><span style="color:#24292E;">        console.</span><span style="color:#6F42C1;">log</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&#39;We cannot open &quot;index.html&quot; file.&#39;</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#24292E;">      }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">      res.</span><span style="color:#6F42C1;">writeHead</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">200</span><span style="color:#24292E;">, {</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#032F62;">&#39;Content-Type&#39;</span><span style="color:#24292E;">: </span><span style="color:#032F62;">&#39;text/html; charset=utf-8&#39;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">      })</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">      res.</span><span style="color:#6F42C1;">end</span><span style="color:#24292E;">(content)</span></span>
<span class="line"><span style="color:#24292E;">    })</span></span>
<span class="line"><span style="color:#24292E;">  })</span></span>
<span class="line"><span style="color:#24292E;">  .</span><span style="color:#6F42C1;">listen</span><span style="color:#24292E;">(httpPort, () </span><span style="color:#D73A49;">=&gt;</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">    console.</span><span style="color:#6F42C1;">log</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&#39;Server listening on: http://localhost:%s&#39;</span><span style="color:#24292E;">, httpPort)</span></span>
<span class="line"><span style="color:#24292E;">  })</span></span></code></pre></div><h3 id="Express-Node-js" tabindex="-1">Express + Node.js <a class="header-anchor" href="#Express-Node-js" aria-label="Permalink to &quot;Express + Node.js&quot;">​</a></h3><p>对于 Node.js/Express，可以考虑使用 <a href="https://github.com/bripkens/connect-history-api-fallback" target="_blank" rel="noreferrer">connect-history-api-fallback 中间件</a>。</p><h3 id="Internet-Information-Services-IIS-" tabindex="-1">Internet Information Services (IIS) <a class="header-anchor" href="#Internet-Information-Services-IIS-" aria-label="Permalink to &quot;Internet Information Services (IIS)&quot;">​</a></h3><ol><li>安装 <a href="https://www.iis.net/downloads/microsoft/url-rewrite" target="_blank" rel="noreferrer">IIS UrlRewrite</a></li><li>在网站的根目录下创建一个 <code>web.config</code> 文件，内容如下：</li></ol><div class="language-xml vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">xml</span><pre class="shiki one-dark-pro vp-code-dark"><code><span class="line"><span style="color:#ABB2BF;">&lt;?</span><span style="color:#E06C75;">xml</span><span style="color:#D19A66;"> version</span><span style="color:#ABB2BF;">=</span><span style="color:#98C379;">&quot;1.0&quot;</span><span style="color:#D19A66;"> encoding</span><span style="color:#ABB2BF;">=</span><span style="color:#98C379;">&quot;UTF-8&quot;</span><span style="color:#ABB2BF;">?&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;">&lt;</span><span style="color:#E06C75;">configuration</span><span style="color:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;">  &lt;</span><span style="color:#E06C75;">system.webServer</span><span style="color:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;">    &lt;</span><span style="color:#E06C75;">rewrite</span><span style="color:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;">      &lt;</span><span style="color:#E06C75;">rules</span><span style="color:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;">        &lt;</span><span style="color:#E06C75;">rule</span><span style="color:#ABB2BF;"> </span><span style="color:#D19A66;">name</span><span style="color:#ABB2BF;">=</span><span style="color:#98C379;">&quot;Handle History Mode and custom 404/500&quot;</span><span style="color:#ABB2BF;"> </span><span style="color:#D19A66;">stopProcessing</span><span style="color:#ABB2BF;">=</span><span style="color:#98C379;">&quot;true&quot;</span><span style="color:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;">          &lt;</span><span style="color:#E06C75;">match</span><span style="color:#ABB2BF;"> </span><span style="color:#D19A66;">url</span><span style="color:#ABB2BF;">=</span><span style="color:#98C379;">&quot;(.*)&quot;</span><span style="color:#ABB2BF;"> /&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;">          &lt;</span><span style="color:#E06C75;">conditions</span><span style="color:#ABB2BF;"> </span><span style="color:#D19A66;">logicalGrouping</span><span style="color:#ABB2BF;">=</span><span style="color:#98C379;">&quot;MatchAll&quot;</span><span style="color:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;">            &lt;</span><span style="color:#E06C75;">add</span><span style="color:#ABB2BF;"> </span><span style="color:#D19A66;">input</span><span style="color:#ABB2BF;">=</span><span style="color:#98C379;">&quot;{REQUEST_FILENAME}&quot;</span><span style="color:#ABB2BF;"> </span><span style="color:#D19A66;">matchType</span><span style="color:#ABB2BF;">=</span><span style="color:#98C379;">&quot;IsFile&quot;</span><span style="color:#ABB2BF;"> </span><span style="color:#D19A66;">negate</span><span style="color:#ABB2BF;">=</span><span style="color:#98C379;">&quot;true&quot;</span><span style="color:#ABB2BF;"> /&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;">            &lt;</span><span style="color:#E06C75;">add</span><span style="color:#ABB2BF;"> </span><span style="color:#D19A66;">input</span><span style="color:#ABB2BF;">=</span><span style="color:#98C379;">&quot;{REQUEST_FILENAME}&quot;</span><span style="color:#ABB2BF;"> </span><span style="color:#D19A66;">matchType</span><span style="color:#ABB2BF;">=</span><span style="color:#98C379;">&quot;IsDirectory&quot;</span><span style="color:#ABB2BF;"> </span><span style="color:#D19A66;">negate</span><span style="color:#ABB2BF;">=</span><span style="color:#98C379;">&quot;true&quot;</span><span style="color:#ABB2BF;"> /&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;">          &lt;/</span><span style="color:#E06C75;">conditions</span><span style="color:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;">          &lt;</span><span style="color:#E06C75;">action</span><span style="color:#ABB2BF;"> </span><span style="color:#D19A66;">type</span><span style="color:#ABB2BF;">=</span><span style="color:#98C379;">&quot;Rewrite&quot;</span><span style="color:#ABB2BF;"> </span><span style="color:#D19A66;">url</span><span style="color:#ABB2BF;">=</span><span style="color:#98C379;">&quot;/&quot;</span><span style="color:#ABB2BF;"> /&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;">        &lt;/</span><span style="color:#E06C75;">rule</span><span style="color:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;">      &lt;/</span><span style="color:#E06C75;">rules</span><span style="color:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;">    &lt;/</span><span style="color:#E06C75;">rewrite</span><span style="color:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;">  &lt;/</span><span style="color:#E06C75;">system.webServer</span><span style="color:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;">&lt;/</span><span style="color:#E06C75;">configuration</span><span style="color:#ABB2BF;">&gt;</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">&lt;?</span><span style="color:#22863A;">xml</span><span style="color:#6F42C1;"> version</span><span style="color:#24292E;">=</span><span style="color:#032F62;">&quot;1.0&quot;</span><span style="color:#6F42C1;"> encoding</span><span style="color:#24292E;">=</span><span style="color:#032F62;">&quot;UTF-8&quot;</span><span style="color:#24292E;">?&gt;</span></span>
<span class="line"><span style="color:#24292E;">&lt;</span><span style="color:#22863A;">configuration</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">  &lt;</span><span style="color:#22863A;">system.webServer</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">    &lt;</span><span style="color:#22863A;">rewrite</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">      &lt;</span><span style="color:#22863A;">rules</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">        &lt;</span><span style="color:#22863A;">rule</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">name</span><span style="color:#24292E;">=</span><span style="color:#032F62;">&quot;Handle History Mode and custom 404/500&quot;</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">stopProcessing</span><span style="color:#24292E;">=</span><span style="color:#032F62;">&quot;true&quot;</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">          &lt;</span><span style="color:#22863A;">match</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">url</span><span style="color:#24292E;">=</span><span style="color:#032F62;">&quot;(.*)&quot;</span><span style="color:#24292E;"> /&gt;</span></span>
<span class="line"><span style="color:#24292E;">          &lt;</span><span style="color:#22863A;">conditions</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">logicalGrouping</span><span style="color:#24292E;">=</span><span style="color:#032F62;">&quot;MatchAll&quot;</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">            &lt;</span><span style="color:#22863A;">add</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">input</span><span style="color:#24292E;">=</span><span style="color:#032F62;">&quot;{REQUEST_FILENAME}&quot;</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">matchType</span><span style="color:#24292E;">=</span><span style="color:#032F62;">&quot;IsFile&quot;</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">negate</span><span style="color:#24292E;">=</span><span style="color:#032F62;">&quot;true&quot;</span><span style="color:#24292E;"> /&gt;</span></span>
<span class="line"><span style="color:#24292E;">            &lt;</span><span style="color:#22863A;">add</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">input</span><span style="color:#24292E;">=</span><span style="color:#032F62;">&quot;{REQUEST_FILENAME}&quot;</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">matchType</span><span style="color:#24292E;">=</span><span style="color:#032F62;">&quot;IsDirectory&quot;</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">negate</span><span style="color:#24292E;">=</span><span style="color:#032F62;">&quot;true&quot;</span><span style="color:#24292E;"> /&gt;</span></span>
<span class="line"><span style="color:#24292E;">          &lt;/</span><span style="color:#22863A;">conditions</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">          &lt;</span><span style="color:#22863A;">action</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">type</span><span style="color:#24292E;">=</span><span style="color:#032F62;">&quot;Rewrite&quot;</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">url</span><span style="color:#24292E;">=</span><span style="color:#032F62;">&quot;/&quot;</span><span style="color:#24292E;"> /&gt;</span></span>
<span class="line"><span style="color:#24292E;">        &lt;/</span><span style="color:#22863A;">rule</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">      &lt;/</span><span style="color:#22863A;">rules</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">    &lt;/</span><span style="color:#22863A;">rewrite</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">  &lt;/</span><span style="color:#22863A;">system.webServer</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">&lt;/</span><span style="color:#22863A;">configuration</span><span style="color:#24292E;">&gt;</span></span></code></pre></div><h3 id="Caddy-v2" tabindex="-1">Caddy v2 <a class="header-anchor" href="#Caddy-v2" aria-label="Permalink to &quot;Caddy v2&quot;">​</a></h3><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki one-dark-pro vp-code-dark"><code><span class="line"><span style="color:#abb2bf;">try_files {path} /</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292e;">try_files {path} /</span></span></code></pre></div><h3 id="Caddy-v1" tabindex="-1">Caddy v1 <a class="header-anchor" href="#Caddy-v1" aria-label="Permalink to &quot;Caddy v1&quot;">​</a></h3><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki one-dark-pro vp-code-dark"><code><span class="line"><span style="color:#abb2bf;">rewrite {</span></span>
<span class="line"><span style="color:#abb2bf;">    regexp .*</span></span>
<span class="line"><span style="color:#abb2bf;">    to {path} /</span></span>
<span class="line"><span style="color:#abb2bf;">}</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292e;">rewrite {</span></span>
<span class="line"><span style="color:#24292e;">    regexp .*</span></span>
<span class="line"><span style="color:#24292e;">    to {path} /</span></span>
<span class="line"><span style="color:#24292e;">}</span></span></code></pre></div><h3 id="Firebase-hosting" tabindex="-1">Firebase hosting <a class="header-anchor" href="#Firebase-hosting" aria-label="Permalink to &quot;Firebase hosting&quot;">​</a></h3><p>将此添加到你的 <code>firebase.json</code> 中：</p><div class="language-json vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">json</span><pre class="shiki one-dark-pro vp-code-dark"><code><span class="line"><span style="color:#ABB2BF;">{</span></span>
<span class="line"><span style="color:#ABB2BF;">  </span><span style="color:#E06C75;">&quot;hosting&quot;</span><span style="color:#ABB2BF;">: {</span></span>
<span class="line"><span style="color:#ABB2BF;">    </span><span style="color:#E06C75;">&quot;public&quot;</span><span style="color:#ABB2BF;">: </span><span style="color:#98C379;">&quot;dist&quot;</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#ABB2BF;">    </span><span style="color:#E06C75;">&quot;rewrites&quot;</span><span style="color:#ABB2BF;">: [</span></span>
<span class="line"><span style="color:#ABB2BF;">      {</span></span>
<span class="line"><span style="color:#ABB2BF;">        </span><span style="color:#E06C75;">&quot;source&quot;</span><span style="color:#ABB2BF;">: </span><span style="color:#98C379;">&quot;**&quot;</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#ABB2BF;">        </span><span style="color:#E06C75;">&quot;destination&quot;</span><span style="color:#ABB2BF;">: </span><span style="color:#98C379;">&quot;/index.html&quot;</span></span>
<span class="line"><span style="color:#ABB2BF;">      }</span></span>
<span class="line"><span style="color:#ABB2BF;">    ]</span></span>
<span class="line"><span style="color:#ABB2BF;">  }</span></span>
<span class="line"><span style="color:#ABB2BF;">}</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">{</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#005CC5;">&quot;hosting&quot;</span><span style="color:#24292E;">: {</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#005CC5;">&quot;public&quot;</span><span style="color:#24292E;">: </span><span style="color:#032F62;">&quot;dist&quot;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#005CC5;">&quot;rewrites&quot;</span><span style="color:#24292E;">: [</span></span>
<span class="line"><span style="color:#24292E;">      {</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#005CC5;">&quot;source&quot;</span><span style="color:#24292E;">: </span><span style="color:#032F62;">&quot;**&quot;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#005CC5;">&quot;destination&quot;</span><span style="color:#24292E;">: </span><span style="color:#032F62;">&quot;/index.html&quot;</span></span>
<span class="line"><span style="color:#24292E;">      }</span></span>
<span class="line"><span style="color:#24292E;">    ]</span></span>
<span class="line"><span style="color:#24292E;">  }</span></span>
<span class="line"><span style="color:#24292E;">}</span></span></code></pre></div><h3 id="Netlify" tabindex="-1">Netlify <a class="header-anchor" href="#Netlify" aria-label="Permalink to &quot;Netlify&quot;">​</a></h3><p>创建一个 <code>_redirects</code> 文件，包含在你的部署文件中：</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki one-dark-pro vp-code-dark"><code><span class="line"><span style="color:#abb2bf;">/* /index.html 200</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292e;">/* /index.html 200</span></span></code></pre></div><p>在 vue-cli、nuxt 和 vite 项目中，这个文件通常放在名为 <code>static</code> 或 <code>public</code> 的目录下。</p><p>你可以在 <a href="https://docs.netlify.com/routing/redirects/rewrites-proxies/#history-pushstate-and-single-page-apps" target="_blank" rel="noreferrer">Netlify 文档</a>中找到更多关于语法的信息。你也可以<a href="https://docs.netlify.com/configure-builds/file-based-configuration/" target="_blank" rel="noreferrer">创建一个 <code>netlify.toml</code></a> 来结合其他 Netlify 功能的重定向。</p><h3 id="Vercel" tabindex="-1">Vercel <a class="header-anchor" href="#Vercel" aria-label="Permalink to &quot;Vercel&quot;">​</a></h3><p>在项目根目录创建一个<code>vercel.json</code>文件，内容如下：</p><div class="language-json vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">json</span><pre class="shiki one-dark-pro vp-code-dark"><code><span class="line"><span style="color:#ABB2BF;">{</span></span>
<span class="line"><span style="color:#ABB2BF;">  </span><span style="color:#E06C75;">&quot;rewrites&quot;</span><span style="color:#ABB2BF;">: [{ </span><span style="color:#E06C75;">&quot;source&quot;</span><span style="color:#ABB2BF;">: </span><span style="color:#98C379;">&quot;/:path*&quot;</span><span style="color:#ABB2BF;">, </span><span style="color:#E06C75;">&quot;destination&quot;</span><span style="color:#ABB2BF;">: </span><span style="color:#98C379;">&quot;/index.html&quot;</span><span style="color:#ABB2BF;"> }]</span></span>
<span class="line"><span style="color:#ABB2BF;">}</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">{</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#005CC5;">&quot;rewrites&quot;</span><span style="color:#24292E;">: [{ </span><span style="color:#005CC5;">&quot;source&quot;</span><span style="color:#24292E;">: </span><span style="color:#032F62;">&quot;/:path*&quot;</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">&quot;destination&quot;</span><span style="color:#24292E;">: </span><span style="color:#032F62;">&quot;/index.html&quot;</span><span style="color:#24292E;"> }]</span></span>
<span class="line"><span style="color:#24292E;">}</span></span></code></pre></div><h2 id="Caveat" tabindex="-1">Caveat <a class="header-anchor" href="#Caveat" aria-label="Permalink to &quot;Caveat&quot;">​</a></h2><p>这有一个注意事项。你的服务器将不再报告 404 错误，因为现在所有未找到的路径都会显示你的 <code>index.html</code> 文件。为了解决这个问题，你应该在你的 Vue 应用程序中实现一个万能的路由来显示 404 页面。</p><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki one-dark-pro vp-code-dark"><code><span class="line"><span style="color:#C678DD;">const</span><span style="color:#ABB2BF;"> </span><span style="color:#E5C07B;">router</span><span style="color:#ABB2BF;"> </span><span style="color:#56B6C2;">=</span><span style="color:#ABB2BF;"> </span><span style="color:#61AFEF;">createRouter</span><span style="color:#ABB2BF;">({</span></span>
<span class="line"><span style="color:#ABB2BF;">  </span><span style="color:#E06C75;">history</span><span style="color:#ABB2BF;">: </span><span style="color:#61AFEF;">createWebHistory</span><span style="color:#ABB2BF;">(),</span></span>
<span class="line"><span style="color:#ABB2BF;">  </span><span style="color:#E06C75;">routes</span><span style="color:#ABB2BF;">: [{ </span><span style="color:#E06C75;">path</span><span style="color:#ABB2BF;">: </span><span style="color:#98C379;">&#39;/:pathMatch(.*)&#39;</span><span style="color:#ABB2BF;">, </span><span style="color:#E06C75;">component</span><span style="color:#ABB2BF;">: </span><span style="color:#E06C75;">NotFoundComponent</span><span style="color:#ABB2BF;"> }],</span></span>
<span class="line"><span style="color:#ABB2BF;">})</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">router</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">createRouter</span><span style="color:#24292E;">({</span></span>
<span class="line"><span style="color:#24292E;">  history: </span><span style="color:#6F42C1;">createWebHistory</span><span style="color:#24292E;">(),</span></span>
<span class="line"><span style="color:#24292E;">  routes: [{ path: </span><span style="color:#032F62;">&#39;/:pathMatch(.*)&#39;</span><span style="color:#24292E;">, component: NotFoundComponent }],</span></span>
<span class="line"><span style="color:#24292E;">})</span></span></code></pre></div><p>另外，如果你使用的是 Node.js 服务器，你可以通过在服务器端使用路由器来匹配传入的 URL，如果没有匹配到路由，则用 404 来响应，从而实现回退。查看 <a href="https://v3.cn.vuejs.org/guide/ssr/introduction.html#what-is-server-side-rendering-ssr" target="_blank" rel="noreferrer">Vue 服务器端渲染文档</a>了解更多信息。</p>`,44);function B(d,u,F,E,h,A){const a=c("VueSchoolLink");return l(),o("div",null,[y,p(a,{href:"https://vueschool.io/lessons/history-mode",title:"Learn about the differences between Hash Mode and HTML5 Mode"}),i])}const b=n(r,[["render",B]]);export{g as __pageData,b as default};
