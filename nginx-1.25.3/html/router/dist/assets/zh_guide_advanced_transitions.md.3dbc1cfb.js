import{_ as a,v as o,b as l,t as p,F as s,L as t,R as e,M as c}from"./chunks/framework.dd59a003.js";const g=JSON.parse('{"title":"过渡动效","description":"","frontmatter":{},"headers":[],"relativePath":"zh/guide/advanced/transitions.md","filePath":"zh/guide/advanced/transitions.md"}'),r={name:"zh/guide/advanced/transitions.md"},y=s("h1",{id:"过渡动效",tabindex:"-1"},[t("过渡动效 "),s("a",{class:"header-anchor",href:"#过渡动效","aria-label":'Permalink to "过渡动效"'},"​")],-1),B=e(`<p>想要在你的路径组件上使用转场，并对导航进行动画处理，你需要使用 <a href="/guide/advanced/composition-api.html#uselink">v-slot API</a>：</p><div class="language-html vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">html</span><pre class="shiki one-dark-pro vp-code-dark"><code><span class="line"><span style="color:#ABB2BF;">&lt;</span><span style="color:#E06C75;">router-view</span><span style="color:#ABB2BF;"> </span><span style="color:#D19A66;">v-slot</span><span style="color:#ABB2BF;">=</span><span style="color:#98C379;">&quot;{ Component }&quot;</span><span style="color:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;">  &lt;</span><span style="color:#E06C75;">transition</span><span style="color:#ABB2BF;"> </span><span style="color:#D19A66;">name</span><span style="color:#ABB2BF;">=</span><span style="color:#98C379;">&quot;fade&quot;</span><span style="color:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;">    &lt;</span><span style="color:#E06C75;">component</span><span style="color:#ABB2BF;"> </span><span style="color:#D19A66;">:is</span><span style="color:#ABB2BF;">=</span><span style="color:#98C379;">&quot;Component&quot;</span><span style="color:#ABB2BF;"> /&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;">  &lt;/</span><span style="color:#E06C75;">transition</span><span style="color:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;">&lt;/</span><span style="color:#E06C75;">router-view</span><span style="color:#ABB2BF;">&gt;</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">&lt;</span><span style="color:#22863A;">router-view</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">v-slot</span><span style="color:#24292E;">=</span><span style="color:#032F62;">&quot;{ Component }&quot;</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">  &lt;</span><span style="color:#B31D28;font-style:italic;">transition</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">name</span><span style="color:#24292E;">=</span><span style="color:#032F62;">&quot;fade&quot;</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">    &lt;</span><span style="color:#B31D28;font-style:italic;">component</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">:is</span><span style="color:#24292E;">=</span><span style="color:#032F62;">&quot;Component&quot;</span><span style="color:#24292E;"> /&gt;</span></span>
<span class="line"><span style="color:#24292E;">  &lt;/</span><span style="color:#B31D28;font-style:italic;">transition</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">&lt;/</span><span style="color:#22863A;">router-view</span><span style="color:#24292E;">&gt;</span></span></code></pre></div><p><a href="https://v3.vuejs.org/guide/transitions-enterleave.html" target="_blank" rel="noreferrer">Transition 的 API</a> 在这里同样适用。</p><h2 id="单个路由的过渡" tabindex="-1">单个路由的过渡 <a class="header-anchor" href="#单个路由的过渡" aria-label="Permalink to &quot;单个路由的过渡&quot;">​</a></h2><p>上面的用法会对所有的路由使用相同的过渡。如果你想让每个路由的组件有不同的过渡，你可以将<a href="./meta.html">元信息</a>和动态的 <code>name</code> 结合在一起，放在<code>&lt;transition&gt;</code> 上：</p><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki one-dark-pro vp-code-dark"><code><span class="line"><span style="color:#C678DD;">const</span><span style="color:#ABB2BF;"> </span><span style="color:#E5C07B;">routes</span><span style="color:#ABB2BF;"> </span><span style="color:#56B6C2;">=</span><span style="color:#ABB2BF;"> [</span></span>
<span class="line"><span style="color:#ABB2BF;">  {</span></span>
<span class="line"><span style="color:#ABB2BF;">    </span><span style="color:#E06C75;">path</span><span style="color:#ABB2BF;">: </span><span style="color:#98C379;">&#39;/custom-transition&#39;</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#ABB2BF;">    </span><span style="color:#E06C75;">component</span><span style="color:#ABB2BF;">: </span><span style="color:#E06C75;">PanelLeft</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#ABB2BF;">    </span><span style="color:#E06C75;">meta</span><span style="color:#ABB2BF;">: { </span><span style="color:#E06C75;">transition</span><span style="color:#ABB2BF;">: </span><span style="color:#98C379;">&#39;slide-left&#39;</span><span style="color:#ABB2BF;"> },</span></span>
<span class="line"><span style="color:#ABB2BF;">  },</span></span>
<span class="line"><span style="color:#ABB2BF;">  {</span></span>
<span class="line"><span style="color:#ABB2BF;">    </span><span style="color:#E06C75;">path</span><span style="color:#ABB2BF;">: </span><span style="color:#98C379;">&#39;/other-transition&#39;</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#ABB2BF;">    </span><span style="color:#E06C75;">component</span><span style="color:#ABB2BF;">: </span><span style="color:#E06C75;">PanelRight</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#ABB2BF;">    </span><span style="color:#E06C75;">meta</span><span style="color:#ABB2BF;">: { </span><span style="color:#E06C75;">transition</span><span style="color:#ABB2BF;">: </span><span style="color:#98C379;">&#39;slide-right&#39;</span><span style="color:#ABB2BF;"> },</span></span>
<span class="line"><span style="color:#ABB2BF;">  },</span></span>
<span class="line"><span style="color:#ABB2BF;">]</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">routes</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> [</span></span>
<span class="line"><span style="color:#24292E;">  {</span></span>
<span class="line"><span style="color:#24292E;">    path: </span><span style="color:#032F62;">&#39;/custom-transition&#39;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">    component: PanelLeft,</span></span>
<span class="line"><span style="color:#24292E;">    meta: { transition: </span><span style="color:#032F62;">&#39;slide-left&#39;</span><span style="color:#24292E;"> },</span></span>
<span class="line"><span style="color:#24292E;">  },</span></span>
<span class="line"><span style="color:#24292E;">  {</span></span>
<span class="line"><span style="color:#24292E;">    path: </span><span style="color:#032F62;">&#39;/other-transition&#39;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">    component: PanelRight,</span></span>
<span class="line"><span style="color:#24292E;">    meta: { transition: </span><span style="color:#032F62;">&#39;slide-right&#39;</span><span style="color:#24292E;"> },</span></span>
<span class="line"><span style="color:#24292E;">  },</span></span>
<span class="line"><span style="color:#24292E;">]</span></span></code></pre></div><div class="language-html vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">html</span><pre class="shiki one-dark-pro vp-code-dark"><code><span class="line"><span style="color:#ABB2BF;">&lt;</span><span style="color:#E06C75;">router-view</span><span style="color:#ABB2BF;"> </span><span style="color:#D19A66;">v-slot</span><span style="color:#ABB2BF;">=</span><span style="color:#98C379;">&quot;{ Component, route }&quot;</span><span style="color:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;">  </span><span style="color:#7F848E;font-style:italic;">&lt;!-- 使用任何自定义过渡和回退到 \`fade\` --&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;">  &lt;</span><span style="color:#E06C75;">transition</span><span style="color:#ABB2BF;"> </span><span style="color:#D19A66;">:name</span><span style="color:#ABB2BF;">=</span><span style="color:#98C379;">&quot;route.meta.transition || &#39;fade&#39;&quot;</span><span style="color:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;">    &lt;</span><span style="color:#E06C75;">component</span><span style="color:#ABB2BF;"> </span><span style="color:#D19A66;">:is</span><span style="color:#ABB2BF;">=</span><span style="color:#98C379;">&quot;Component&quot;</span><span style="color:#ABB2BF;"> /&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;">  &lt;/</span><span style="color:#E06C75;">transition</span><span style="color:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;">&lt;/</span><span style="color:#E06C75;">router-view</span><span style="color:#ABB2BF;">&gt;</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">&lt;</span><span style="color:#22863A;">router-view</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">v-slot</span><span style="color:#24292E;">=</span><span style="color:#032F62;">&quot;{ Component, route }&quot;</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#6A737D;">&lt;!-- 使用任何自定义过渡和回退到 \`fade\` --&gt;</span></span>
<span class="line"><span style="color:#24292E;">  &lt;</span><span style="color:#B31D28;font-style:italic;">transition</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">:name</span><span style="color:#24292E;">=</span><span style="color:#032F62;">&quot;route.meta.transition || &#39;fade&#39;&quot;</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">    &lt;</span><span style="color:#B31D28;font-style:italic;">component</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">:is</span><span style="color:#24292E;">=</span><span style="color:#032F62;">&quot;Component&quot;</span><span style="color:#24292E;"> /&gt;</span></span>
<span class="line"><span style="color:#24292E;">  &lt;/</span><span style="color:#B31D28;font-style:italic;">transition</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">&lt;/</span><span style="color:#22863A;">router-view</span><span style="color:#24292E;">&gt;</span></span></code></pre></div><h2 id="基于路由的动态过渡" tabindex="-1">基于路由的动态过渡 <a class="header-anchor" href="#基于路由的动态过渡" aria-label="Permalink to &quot;基于路由的动态过渡&quot;">​</a></h2><p>也可以根据目标路由和当前路由之间的关系，动态地确定使用的过渡。使用和刚才非常相似的片段：</p><div class="language-html vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">html</span><pre class="shiki one-dark-pro vp-code-dark"><code><span class="line"><span style="color:#7F848E;font-style:italic;">&lt;!-- 使用动态过渡名称 --&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;">&lt;</span><span style="color:#E06C75;">router-view</span><span style="color:#ABB2BF;"> </span><span style="color:#D19A66;">v-slot</span><span style="color:#ABB2BF;">=</span><span style="color:#98C379;">&quot;{ Component, route }&quot;</span><span style="color:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;">  &lt;</span><span style="color:#E06C75;">transition</span><span style="color:#ABB2BF;"> </span><span style="color:#D19A66;">:name</span><span style="color:#ABB2BF;">=</span><span style="color:#98C379;">&quot;route.meta.transition&quot;</span><span style="color:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;">    &lt;</span><span style="color:#E06C75;">component</span><span style="color:#ABB2BF;"> </span><span style="color:#D19A66;">:is</span><span style="color:#ABB2BF;">=</span><span style="color:#98C379;">&quot;Component&quot;</span><span style="color:#ABB2BF;"> /&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;">  &lt;/</span><span style="color:#E06C75;">transition</span><span style="color:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;">&lt;/</span><span style="color:#E06C75;">router-view</span><span style="color:#ABB2BF;">&gt;</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6A737D;">&lt;!-- 使用动态过渡名称 --&gt;</span></span>
<span class="line"><span style="color:#24292E;">&lt;</span><span style="color:#22863A;">router-view</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">v-slot</span><span style="color:#24292E;">=</span><span style="color:#032F62;">&quot;{ Component, route }&quot;</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">  &lt;</span><span style="color:#B31D28;font-style:italic;">transition</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">:name</span><span style="color:#24292E;">=</span><span style="color:#032F62;">&quot;route.meta.transition&quot;</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">    &lt;</span><span style="color:#B31D28;font-style:italic;">component</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">:is</span><span style="color:#24292E;">=</span><span style="color:#032F62;">&quot;Component&quot;</span><span style="color:#24292E;"> /&gt;</span></span>
<span class="line"><span style="color:#24292E;">  &lt;/</span><span style="color:#B31D28;font-style:italic;">transition</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">&lt;/</span><span style="color:#22863A;">router-view</span><span style="color:#24292E;">&gt;</span></span></code></pre></div><p>我们可以添加一个 <a href="./navigation-guards.html#全局后置钩子">after navigation hook</a>，根据路径的深度动态添加信息到 <code>meta</code> 字段。</p><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki one-dark-pro vp-code-dark"><code><span class="line"><span style="color:#E5C07B;">router</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">afterEach</span><span style="color:#ABB2BF;">((</span><span style="color:#E06C75;font-style:italic;">to</span><span style="color:#ABB2BF;">, </span><span style="color:#E06C75;font-style:italic;">from</span><span style="color:#ABB2BF;">) </span><span style="color:#C678DD;">=&gt;</span><span style="color:#ABB2BF;"> {</span></span>
<span class="line"><span style="color:#ABB2BF;">  </span><span style="color:#C678DD;">const</span><span style="color:#ABB2BF;"> </span><span style="color:#E5C07B;">toDepth</span><span style="color:#ABB2BF;"> </span><span style="color:#56B6C2;">=</span><span style="color:#ABB2BF;"> </span><span style="color:#E5C07B;">to</span><span style="color:#ABB2BF;">.</span><span style="color:#E5C07B;">path</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">split</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&#39;/&#39;</span><span style="color:#ABB2BF;">).</span><span style="color:#E06C75;">length</span></span>
<span class="line"><span style="color:#ABB2BF;">  </span><span style="color:#C678DD;">const</span><span style="color:#ABB2BF;"> </span><span style="color:#E5C07B;">fromDepth</span><span style="color:#ABB2BF;"> </span><span style="color:#56B6C2;">=</span><span style="color:#ABB2BF;"> </span><span style="color:#E5C07B;">from</span><span style="color:#ABB2BF;">.</span><span style="color:#E5C07B;">path</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">split</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&#39;/&#39;</span><span style="color:#ABB2BF;">).</span><span style="color:#E06C75;">length</span></span>
<span class="line"><span style="color:#ABB2BF;">  </span><span style="color:#E5C07B;">to</span><span style="color:#ABB2BF;">.</span><span style="color:#E5C07B;">meta</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">transition</span><span style="color:#ABB2BF;"> </span><span style="color:#56B6C2;">=</span><span style="color:#ABB2BF;"> </span><span style="color:#E06C75;">toDepth</span><span style="color:#ABB2BF;"> </span><span style="color:#56B6C2;">&lt;</span><span style="color:#ABB2BF;"> </span><span style="color:#E06C75;">fromDepth</span><span style="color:#ABB2BF;"> </span><span style="color:#C678DD;">?</span><span style="color:#ABB2BF;"> </span><span style="color:#98C379;">&#39;slide-right&#39;</span><span style="color:#ABB2BF;"> </span><span style="color:#C678DD;">:</span><span style="color:#ABB2BF;"> </span><span style="color:#98C379;">&#39;slide-left&#39;</span></span>
<span class="line"><span style="color:#ABB2BF;">})</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">router.</span><span style="color:#6F42C1;">afterEach</span><span style="color:#24292E;">((</span><span style="color:#E36209;">to</span><span style="color:#24292E;">, </span><span style="color:#E36209;">from</span><span style="color:#24292E;">) </span><span style="color:#D73A49;">=&gt;</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">toDepth</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> to.path.</span><span style="color:#6F42C1;">split</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&#39;/&#39;</span><span style="color:#24292E;">).</span><span style="color:#005CC5;">length</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">fromDepth</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> from.path.</span><span style="color:#6F42C1;">split</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&#39;/&#39;</span><span style="color:#24292E;">).</span><span style="color:#005CC5;">length</span></span>
<span class="line"><span style="color:#24292E;">  to.meta.transition </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> toDepth </span><span style="color:#D73A49;">&lt;</span><span style="color:#24292E;"> fromDepth </span><span style="color:#D73A49;">?</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&#39;slide-right&#39;</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">:</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&#39;slide-left&#39;</span></span>
<span class="line"><span style="color:#24292E;">})</span></span></code></pre></div><h2 id="强制在复用的视图之间进行过渡" tabindex="-1">强制在复用的视图之间进行过渡 <a class="header-anchor" href="#强制在复用的视图之间进行过渡" aria-label="Permalink to &quot;强制在复用的视图之间进行过渡&quot;">​</a></h2><p>Vue 可能会自动复用看起来相似的组件，从而忽略了任何过渡。幸运的是，可以<a href="https://v3.vuejs.org/api/special-attributes.html#key" target="_blank" rel="noreferrer">添加一个 <code>key</code> 属性</a>来强制过渡。这也允许你在相同路由上使用不同的参数触发过渡：</p><div class="language-vue vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">vue</span><pre class="shiki one-dark-pro vp-code-dark"><code><span class="line"><span style="color:#ABB2BF;">&lt;</span><span style="color:#E06C75;">router-view</span><span style="color:#ABB2BF;"> </span><span style="color:#D19A66;">v-slot</span><span style="color:#ABB2BF;">=</span><span style="color:#ABB2BF;">&quot;</span><span style="color:#ABB2BF;">{ </span><span style="color:#E06C75;">Component</span><span style="color:#ABB2BF;">, </span><span style="color:#E06C75;">route</span><span style="color:#ABB2BF;"> }</span><span style="color:#ABB2BF;">&quot;</span><span style="color:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;">  &lt;transition name=&quot;fade&quot;&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;">    &lt;component :is=&quot;Component&quot; :key=&quot;route.path&quot; /&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;">  &lt;/transition&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;">&lt;/</span><span style="color:#E06C75;">router-view</span><span style="color:#ABB2BF;">&gt;</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">&lt;</span><span style="color:#22863A;">router-view</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">v-slot</span><span style="color:#24292E;">=</span><span style="color:#032F62;">&quot;</span><span style="color:#24292E;">{ Component, route }</span><span style="color:#032F62;">&quot;</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">  &lt;transition name=&quot;fade&quot;&gt;</span></span>
<span class="line"><span style="color:#24292E;">    &lt;component :is=&quot;Component&quot; :key=&quot;route.path&quot; /&gt;</span></span>
<span class="line"><span style="color:#24292E;">  &lt;/transition&gt;</span></span>
<span class="line"><span style="color:#24292E;">&lt;/</span><span style="color:#22863A;">router-view</span><span style="color:#24292E;">&gt;</span></span></code></pre></div>`,15);function i(F,A,E,u,d,C){const n=c("VueSchoolLink");return o(),l("div",null,[y,p(n,{href:"https://vueschool.io/lessons/route-transitions",title:"Learn about route transitions"}),B])}const m=a(r,[["render",i]]);export{g as __pageData,m as default};
