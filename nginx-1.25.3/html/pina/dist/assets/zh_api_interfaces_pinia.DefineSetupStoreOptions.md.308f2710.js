import{_ as e,o as t,c as a,S as o}from"./chunks/framework.7ffc5276.js";const u=JSON.parse('{"title":"接口：DefineSetupStoreOptions<Id, S, G, A>","description":"","frontmatter":{"sidebar":"auto","editLinks":false,"sidebarDepth":3},"headers":[],"relativePath":"zh/api/interfaces/pinia.DefineSetupStoreOptions.md","filePath":"zh/api/interfaces/pinia.DefineSetupStoreOptions.md"}'),i={name:"zh/api/interfaces/pinia.DefineSetupStoreOptions.md"},n=o('<p><a href="./../">API 文档</a> / <a href="./../modules/pinia.html">pinia</a> / DefineSetupStoreOptions</p><h1 id="interface-definesetupstoreoptions-id-s-g-a" tabindex="-1">接口：DefineSetupStoreOptions&lt;Id, S, G, A&gt; <a class="header-anchor" href="#interface-definesetupstoreoptions-id-s-g-a" aria-label="Permalink to &quot;接口：DefineSetupStoreOptions&lt;Id, S, G, A\\&gt; %{#interface-definesetupstoreoptions-id-s-g-a}%&quot;">​</a></h1><p><a href="./../modules/pinia.html">pinia</a>.DefineSetupStoreOptions</p><p><code>defineStore()</code> 的选项参数，用于设置 store。 可以通过插件 API 扩展来增强 store 的功能。</p><p><strong><code>See</code></strong></p><p><a href="./pinia.DefineStoreOptionsBase.html">DefineStoreOptionsBase</a>.</p><h2 id="type-parameters" tabindex="-1">类型参数 <a class="header-anchor" href="#type-parameters" aria-label="Permalink to &quot;类型参数 %{#type-parameters}%&quot;">​</a></h2><table><thead><tr><th style="text-align:left;">名称</th><th style="text-align:left;">类型</th></tr></thead><tbody><tr><td style="text-align:left;"><code>Id</code></td><td style="text-align:left;">extends <code>string</code></td></tr><tr><td style="text-align:left;"><code>S</code></td><td style="text-align:left;">extends <a href="./../modules/pinia.html#statetree"><code>StateTree</code></a></td></tr><tr><td style="text-align:left;"><code>G</code></td><td style="text-align:left;"><code>G</code></td></tr><tr><td style="text-align:left;"><code>A</code></td><td style="text-align:left;"><code>A</code></td></tr></tbody></table><h2 id="hierarchy" tabindex="-1">层次结构 <a class="header-anchor" href="#hierarchy" aria-label="Permalink to &quot;层次结构 %{#hierarchy}%&quot;">​</a></h2><ul><li><p><a href="./pinia.DefineStoreOptionsBase.html"><code>DefineStoreOptionsBase</code></a>&lt;<code>S</code>, <a href="./../modules/pinia.html#store"><code>Store</code></a>&lt;<code>Id</code>, <code>S</code>, <code>G</code>, <code>A</code>&gt;&gt;</p><p>↳ <strong><code>DefineSetupStoreOptions</code></strong></p></li></ul><h2 id="属性" tabindex="-1">属性 <a class="header-anchor" href="#属性" aria-label="Permalink to &quot;属性&quot;">​</a></h2><h3 id="actions" tabindex="-1">actions <a class="header-anchor" href="#actions" aria-label="Permalink to &quot;actions %{#actions}%&quot;">​</a></h3><p>• <code>Optional</code> <strong>actions</strong>: <code>A</code></p><p>提取的 action。由 useStore() 添加。不应该由用户在创建 store 时添加。 可以在插件中使用，以获得用 setup 函数定义的 store 中的 action 列表。 注意这个属性一定是会定义的。</p>',14),r=[n];function d(s,c,p,l,h,f){return t(),a("div",null,r)}const _=e(i,[["render",d]]);export{u as __pageData,_ as default};
