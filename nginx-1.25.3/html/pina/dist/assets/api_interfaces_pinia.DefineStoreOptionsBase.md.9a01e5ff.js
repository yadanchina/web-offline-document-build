import{_ as e,o as t,c as a,S as o}from"./chunks/framework.7ffc5276.js";const m=JSON.parse('{"title":"Interface: DefineStoreOptionsBase<S, Store>","description":"","frontmatter":{"editLink":false},"headers":[],"relativePath":"api/interfaces/pinia.DefineStoreOptionsBase.md","filePath":"api/interfaces/pinia.DefineStoreOptionsBase.md"}'),i={name:"api/interfaces/pinia.DefineStoreOptionsBase.md"},r=o('<p><a href="./../">API Documentation</a> / <a href="./../modules/pinia.html">pinia</a> / DefineStoreOptionsBase</p><h1 id="Interface-DefineStoreOptionsBase-S-Store-" tabindex="-1">Interface: DefineStoreOptionsBase&lt;S, Store&gt; <a class="header-anchor" href="#Interface-DefineStoreOptionsBase-S-Store-" aria-label="Permalink to &quot;Interface: DefineStoreOptionsBase&lt;S, Store\\&gt;&quot;">​</a></h1><p><a href="./../modules/pinia.html">pinia</a>.DefineStoreOptionsBase</p><p>Options passed to <code>defineStore()</code> that are common between option and setup stores. Extend this interface if you want to add custom options to both kinds of stores.</p><h2 id="Type-parameters" tabindex="-1">Type parameters <a class="header-anchor" href="#Type-parameters" aria-label="Permalink to &quot;Type parameters&quot;">​</a></h2><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th></tr></thead><tbody><tr><td style="text-align:left;"><code>S</code></td><td style="text-align:left;">extends <a href="./../modules/pinia.html#StateTree"><code>StateTree</code></a></td></tr><tr><td style="text-align:left;"><code>Store</code></td><td style="text-align:left;"><code>Store</code></td></tr></tbody></table><h2 id="Hierarchy" tabindex="-1">Hierarchy <a class="header-anchor" href="#Hierarchy" aria-label="Permalink to &quot;Hierarchy&quot;">​</a></h2><ul><li><p><strong><code>DefineStoreOptionsBase</code></strong></p><p>↳ <a href="./pinia.DefineStoreOptions.html"><code>DefineStoreOptions</code></a></p><p>↳ <a href="./pinia.DefineSetupStoreOptions.html"><code>DefineSetupStoreOptions</code></a></p></li></ul>',8),n=[r];function s(p,d,c,l,f,h){return t(),a("div",null,n)}const _=e(i,[["render",s]]);export{m as __pageData,_ as default};
