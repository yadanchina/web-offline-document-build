import{_ as e,o as t,c as a,S as i}from"./chunks/framework.7ffc5276.js";const S=JSON.parse('{"title":"Interface: StoreDefinition<Id, S, G, A>","description":"","frontmatter":{"editLink":false},"headers":[],"relativePath":"api/interfaces/pinia.StoreDefinition.md","filePath":"api/interfaces/pinia.StoreDefinition.md"}'),o={name:"api/interfaces/pinia.StoreDefinition.md"},r=i('<p><a href="./../">API Documentation</a> / <a href="./../modules/pinia.html">pinia</a> / StoreDefinition</p><h1 id="Interface-StoreDefinition-Id-S-G-A-" tabindex="-1">Interface: StoreDefinition&lt;Id, S, G, A&gt; <a class="header-anchor" href="#Interface-StoreDefinition-Id-S-G-A-" aria-label="Permalink to &quot;Interface: StoreDefinition&lt;Id, S, G, A\\&gt;&quot;">​</a></h1><p><a href="./../modules/pinia.html">pinia</a>.StoreDefinition</p><p>Return type of <code>defineStore()</code>. Function that allows instantiating a store.</p><h2 id="Type-parameters" tabindex="-1">Type parameters <a class="header-anchor" href="#Type-parameters" aria-label="Permalink to &quot;Type parameters&quot;">​</a></h2><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th></tr></thead><tbody><tr><td style="text-align:left;"><code>Id</code></td><td style="text-align:left;">extends <code>string</code> = <code>string</code></td></tr><tr><td style="text-align:left;"><code>S</code></td><td style="text-align:left;">extends <a href="./../modules/pinia.html#StateTree"><code>StateTree</code></a> = <a href="./../modules/pinia.html#StateTree"><code>StateTree</code></a></td></tr><tr><td style="text-align:left;"><code>G</code></td><td style="text-align:left;"><a href="./../modules/pinia.html#_GettersTree"><code>_GettersTree</code></a>&lt;<code>S</code>&gt;</td></tr><tr><td style="text-align:left;"><code>A</code></td><td style="text-align:left;"><a href="./../modules/pinia.html#_ActionsTree"><code>_ActionsTree</code></a></td></tr></tbody></table><h2 id="Hierarchy" tabindex="-1">Hierarchy <a class="header-anchor" href="#Hierarchy" aria-label="Permalink to &quot;Hierarchy&quot;">​</a></h2><ul><li><p><strong><code>StoreDefinition</code></strong></p><p>↳ <a href="./pinia.SetupStoreDefinition.html"><code>SetupStoreDefinition</code></a></p></li></ul><h2 id="Callable" tabindex="-1">Callable <a class="header-anchor" href="#Callable" aria-label="Permalink to &quot;Callable&quot;">​</a></h2><h3 id="StoreDefinition" tabindex="-1">StoreDefinition <a class="header-anchor" href="#StoreDefinition" aria-label="Permalink to &quot;StoreDefinition&quot;">​</a></h3><p>▸ <strong>StoreDefinition</strong>(<code>pinia?</code>, <code>hot?</code>): <a href="./../modules/pinia.html#Store"><code>Store</code></a>&lt;<code>Id</code>, <code>S</code>, <code>G</code>, <code>A</code>&gt;</p><p>Returns a store, creates it if necessary.</p><h4 id="Parameters" tabindex="-1">Parameters <a class="header-anchor" href="#Parameters" aria-label="Permalink to &quot;Parameters&quot;">​</a></h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th><th style="text-align:left;">Description</th></tr></thead><tbody><tr><td style="text-align:left;"><code>pinia?</code></td><td style="text-align:left;"><code>null</code> | <a href="./pinia.Pinia.html"><code>Pinia</code></a></td><td style="text-align:left;">Pinia instance to retrieve the store</td></tr><tr><td style="text-align:left;"><code>hot?</code></td><td style="text-align:left;"><a href="./../modules/pinia.html#StoreGeneric"><code>StoreGeneric</code></a></td><td style="text-align:left;">dev only hot module replacement</td></tr></tbody></table><h4 id="Returns" tabindex="-1">Returns <a class="header-anchor" href="#Returns" aria-label="Permalink to &quot;Returns&quot;">​</a></h4><p><a href="./../modules/pinia.html#Store"><code>Store</code></a>&lt;<code>Id</code>, <code>S</code>, <code>G</code>, <code>A</code>&gt;</p><h2 id="Properties" tabindex="-1">Properties <a class="header-anchor" href="#Properties" aria-label="Permalink to &quot;Properties&quot;">​</a></h2><h3 id="-id" tabindex="-1">$id <a class="header-anchor" href="#-id" aria-label="Permalink to &quot;$id&quot;">​</a></h3><p>• <strong>$id</strong>: <code>Id</code></p><p>Id of the store. Used by map helpers.</p>',20),d=[r];function n(l,c,s,h,f,p){return t(),a("div",null,d)}const u=e(o,[["render",n]]);export{S as __pageData,u as default};
